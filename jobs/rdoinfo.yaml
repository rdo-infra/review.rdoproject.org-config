# This is a specific builder for post jobs, where we do not want to use
# zuul-cloner but git directly. This is because there can be merge commits
# that our zuul has not processed yet.

- builder:
    name: rdo-prepare-workspace-post
    builders:
      - shell: |
          set -e -x
          if [[ "${ZUUL_PIPELINE}" == "post" ]]; then
          # Source is review.rdoproject.org
          GIT_URL=https://review.rdoproject.org/r
          elif [[ "${ZUUL_PIPELINE}" == "openstack-post" ]]; then
          # Source is git.openstack.org
          GIT_URL=https://git.openstack.org
          fi
          echo "Clean workspace"
          rm -Rf ./*
          echo "Clone $ZUUL_PROJECT"
          git clone ${GIT_URL}/${ZUUL_PROJECT} ${ZUUL_PROJECT}
          # ZUUL_NEWREV is the variable with the commit to be used
          echo "Checking out $ZUUL_NEWREV"
          pushd $ZUUL_PROJECT
          git checkout $ZUUL_NEWREV
          popd

- builder:
    name: validate-buildsys-tags
    builders:
      - shell: |
          set -e -x
          # Install requirements
          sudo yum install -y createrepo mock git centos-packager yum-utils
          sudo pip install ruamel.yaml rdopkg
          # clone scripts and run
          git clone http://review.rdoproject.org/r/gating_scripts
          pushd gating_scripts/buildsys-tags/
          bash ./create_temporary_repos.sh $WORKSPACE/rdoinfo $WORKSPACE/logs
          bash ./validate_updates.sh $WORKSPACE/logs
          popd

- builder:
    name: find-dependencies-rebuilds
    builders:
      - shell: |
          set -e -x
          # Install requirements
          sudo pip install rdopkg

          # Create file to store required rebuilds
          mkdir -p $WORKSPACE/logs
          fedora_rebuilds_file="$WORKSPACE/logs/fedora_rebuilds.txt"
          rdo_rebuilds_file="$WORKSPACE/logs/rdo_rebuilds.txt"
          touch $fedora_rebuilds_file
          touch $rdo_rebuilds_file

          pushd $ZUUL_PROJECT
          BUILDSYS_TAGS_DIFF=$(rdopkg info-tags-diff -b .)
          while read line; do
              pkg_name=$(echo $line |cut -d " " -f 1)
              tags=$(echo $line |cut -d " " -f 2-| tr -d [],\')
              for tag in $tags
              do
                  PHASE=$(echo $tag|awk -F'-' '{print $4}')
                  if [ "$PHASE" != "candidate" ]; then
                      continue
                  fi
                  build=$(rdopkg info -l . "name:^${pkg_name}$"| awk "/${tag}/{print \$2}")
                  target=${tag//-candidate/-el7}
                  config=$(rdopkg info -l . "name:^${pkg_name}$"| awk '/^conf:/{print $2}')
                  if [ $config = "fedora-dependency" ]; then
                      echo "$target $build" | tee -a $fedora_rebuilds_file
                  elif [ $config = "rdo-dependency" ]; then
                      echo "$target $build" | tee -a $rdo_rebuilds_file
                  fi
              done
          done <<< "${BUILDSYS_TAGS_DIFF}"
          popd

- builder:
   name: configure-rdoinfo-oooq-gate-job
   builders:
     - shell:
         !include-raw: scripts/rdoinfo_oooq_prepare.sh

# In some cases we need to clone oooq repo and adding custom config before running quickstart
# so we create a builder oooq-checkout to clone it
- builder:
    name: oooq-checkout
    builders:
      - shell: |
          #!/bin/bash -xe
          sudo mkdir -p /opt/stack/new
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack/tripleo-quickstart
              dest: /opt/stack/new/tripleo-quickstart
          EOF
          sudo /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack/tripleo-quickstart

- job:
    name: rdoinfo-DLRN-check
    defaults: rdo-global
    builders:
      - rdo-prepare-workspace
      - rdo-log-setup
      - prepare-dlrn
      - shell: |
          set +e -x
          pushd $ZUUL_PROJECT
          sudo pip install rdopkg

          CURRENT_MASTER_TAG="rocky-uc"

          PACKAGES_UPDATED_MASTER=""
          PACKAGES_UPDATED_NEWTON=""
          PACKAGES_UPDATED_OCATA=""
          PACKAGES_UPDATED_PIKE=""
          PACKAGES_UPDATED_QUEENS=""

          TAGS_DIFF=$(rdopkg info-tags-diff .)

          while read line; do
              PKGNAME=$(awk '{print $1}' <<< $line)
              if [[ -n $(echo "$line" | grep -w $CURRENT_MASTER_TAG) ]]; then
                  PACKAGES_UPDATED_MASTER="$PACKAGES_UPDATED_MASTER $PKGNAME"
              fi
              if [[ -n $(echo "$line" | grep -w queens) ]]; then
                  PACKAGES_UPDATED_QUEENS="$PACKAGES_UPDATED_QUEENS $PKGNAME"
              fi
              if [[ -n $(echo "$line" | grep -w pike) ]]; then
                  PACKAGES_UPDATED_PIKE="$PACKAGES_UPDATED_PIKE $PKGNAME"
              fi
              if [[ -n $(echo "$line" | grep -w ocata) ]]; then
                  PACKAGES_UPDATED_OCATA="$PACKAGES_UPDATED_OCATA $PKGNAME"
              fi
              if [[ -n $(echo "$line" | grep -w newton) ]]; then
                  PACKAGES_UPDATED_NEWTON="$PACKAGES_UPDATED_NEWTON $PKGNAME"
              fi
          done <<< "${TAGS_DIFF}"
          popd

          pushd DLRN
          ret=0
          if [ -n "${PACKAGES_UPDATED_MASTER}" ]; then
              timeout --signal=SIGKILL 10800  /opt/nodepool-scripts/rdoinfo-DLRN.sh $CURRENT_MASTER_TAG "${PACKAGES_UPDATED_MASTER}"
              ret1=$?
              if [ $ret1 -ne 0 ]; then
                  ret=$ret1
              fi
              # The data/ contents have been archived already, remove to avoid issues with the next branch
              rm -rf data
              sudo rm -rf /var/cache/mock/*
          fi
          if [ -n "${PACKAGES_UPDATED_QUEENS}" ]; then
              timeout --signal=SIGKILL 10800 /opt/nodepool-scripts/rdoinfo-DLRN.sh queens "${PACKAGES_UPDATED_QUEENS}"
              ret1=$?
              if [ $ret1 -ne 0 ]; then
                  ret=$ret1
              fi
              # The data/ contents have been archived already, remove to avoid issues with the next branch
              rm -rf data
              sudo rm -rf /var/cache/mock/*
          fi
          if [ -n "${PACKAGES_UPDATED_PIKE}" ]; then
              timeout --signal=SIGKILL 10800 /opt/nodepool-scripts/rdoinfo-DLRN.sh pike "${PACKAGES_UPDATED_PIKE}"
              ret1=$?
              if [ $ret1 -ne 0 ]; then
                  ret=$ret1
              fi
              # The data/ contents have been archived already, remove to avoid issues with the next branch
              rm -rf data
              sudo rm -rf /var/cache/mock/*
          fi
          if [ -n "${PACKAGES_UPDATED_OCATA}" ]; then
              timeout --signal=SIGKILL 10800 /opt/nodepool-scripts/rdoinfo-DLRN.sh ocata "${PACKAGES_UPDATED_OCATA}"
              ret1=$?
              if [ $ret1 -ne 0 ]; then
                  ret=$ret1
              fi
              # The data/ contents have been archived already, remove to avoid issues with the next branch
              rm -rf data
              sudo rm -rf /var/cache/mock/*
          fi
          if [ -n "${PACKAGES_UPDATED_NEWTON}" ]; then
              timeout --signal=SIGKILL 10800 /opt/nodepool-scripts/rdoinfo-DLRN.sh newton "${PACKAGES_UPDATED_NEWTON}"
              ret1=$?
              if [ $ret1 -ne 0 ]; then
                  ret=$ret1
              fi
              # The data/ contents have been archived already, remove to avoid issues with the next branch
              rm -rf data
              sudo rm -rf /var/cache/mock/*
          fi
          popd

          # Retrieve logs/repositories/packages
          mkdir logs
          cp -a DLRN/logs/* logs/
          exit $ret
    publishers:
      - rdo-rsync-logs
    triggers:
      - zuul
    wrappers:
      - build-timeout:
          timeout: '180'
      - timestamps
      - credentials-binding:
        - file:
           credential-id: 4b4632bd-f44b-446d-a8ca-b57eabef0a7c
           variable: LOG_SSH_KEY
    node: rdo-centos-7

- job:
    name: rdoinfo-create-project
    defaults: rdo-global
    builders:
      - shell: |
          # DEBUG zuul-cloner error
          sudo sed -i "s/raise exceptions.RevNotFound/self.log.exception('DEBUG RevNotFound'); raise exceptions.RevNotFound/" /usr/lib/python2.7/site-packages/zuul/lib/cloner.py
      - rdo-prepare-workspace-post
      - shell: |
          set +e -x
          sudo pip install git-review rdopkg ruamel.yaml Jinja2
          cd $ZUUL_PROJECT

          TAGS_DIFF=$(rdopkg info-tags-diff .)
          NEW_PROJECTS=""

          while read line; do
            PKGNAME=$(awk '{print $1}' <<< $line)
            if [[ -n $(echo "$line" | grep -w under-review) ]]; then
                NEW_PROJECTS="$NEW_PROJECTS $PKGNAME"
            fi
          done <<< "${TAGS_DIFF}"

          echo "New projects: ${NEW_PROJECTS}"

          for PKG in ${NEW_PROJECTS}; do
            /opt/nodepool-scripts/add-project-from-rdoinfo.sh $PKG $PWD
          done
    triggers:
      - zuul
    node: rdo-centos-7
    wrappers:
      - timestamps
      - credentials-binding:
        - file:
           credential-id: f8472527-c620-43b7-b4ed-3d3ec67ec63a
           variable: SSH_KEY


- job-template:
    name: rdoinfo-upper-constraints-update-{branch}
    defaults: rdo-global
    builders:
      - rdo-prepare-workspace
      - shell: |
          set +e -x
          sudo pip install ruamel.yaml git-review
          cd $ZUUL_PROJECT
          if [ "{branch}" != "master" ]; then
            GIT_SUFFIX="?h=stable/{branch}"
            UC_BRANCH="{branch}"
          else
            UC_BRANCH="rocky-uc"
            GIT_SUFFIX=""
          fi
          curl -o upper-constraints.txt "http://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt$GIT_SUFFIX"
          ./update-uc.py $UC_BRANCH
          DIFF=$(git diff rdo.yml)
          if [ -n "$DIFF" ]; then
            mkdir -p ~/.ssh
            cat >> ~/.ssh/config << EOF

          Host review.rdoproject.org
            IdentityFile $SSH_KEY
          EOF
            chmod 600 ~/.ssh/config
            sudo chmod 600 $SSH_KEY
            sudo chown jenkins:jenkins $SSH_KEY
            ssh-keyscan -p 29418 review.rdoproject.org >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            # Check for an open change, if so reuse it
            change_info=$(ssh -p 29418 rdo-trunk@review.rdoproject.org \
            gerrit query --current-patch-set status:open project:rdoinfo owner:rdo-trunk branch:master \
            topic:rdoinfo-uc-update-"{branch}")
            previous=$(echo "$change_info" | grep "^  number:" | awk '{{print $2}}')
            if [ -n "$previous" ]; then
                CHANGE_ID=$(echo "$change_info" | grep "^change" | awk '{{print $2}}')
                COMMIT_MSG="Bump rdoinfo $UC_BRANCH tags to latest upper-constraints\n\nChange-Id: $CHANGE_ID\n"
            else
                COMMIT_MSG="Bump rdoinfo $UC_BRANCH tags to latest upper-constraints"
            fi
            git config user.name "rdo-trunk"
            git config user.email "javier.pena@redhat.com"
            git config gitreview.username "rdo-trunk"
            git checkout -b proposal
            git review -s -v
            echo -e $COMMIT_MSG | git commit -F- rdo.yml
            # Just in case, check if there are changes between this version and the current review
            curl https://review.rdoproject.org/r/changes/rdoinfo~master~$CHANGE_ID/revisions/current/files/rdo.yml/content |base64 -d > rdo_current.yml
            diff rdo.yml rdo_current.yml
            if [ $? -ne 0 ]; then
                git review -t "rdoinfo-uc-update-{branch}" < /dev/null
            fi
          fi
    triggers:
      - zuul
    node: rdo-centos-7
    wrappers:
      - credentials-binding:
        - file:
           credential-id: f8472527-c620-43b7-b4ed-3d3ec67ec63a
           variable: SSH_KEY


- job:
    name: rdo-deps-uc-send-review
    defaults: global
    builders:
      - rdo-prepare-workspace-post
      - shell: |
          set +e -x
          sudo pip install pymod2pkg sh git-review ruamel.yaml rdopkg
          if [ "${ZUUL_PROJECT}" != 'rdoinfo' ]; then
              zuul-cloner http://review.rdoproject.org/r rdoinfo
          fi
          if [ "${ZUUL_REF}" == 'master' ]; then
              RELEASE="rocky"
          else
              RELEASE="${ZUUL_REF/stable\//}"
          fi
          export PHASE="candidate"
          pushd $ZUUL_PROJECT
          SUBJECT=$(git log --oneline $ZUUL_COMMIT|head -1|cut -d " " -f 2)
          if [ $SUBJECT == "Merge" ]; then
             REAL_COMMIT=$(git show $ZUUL_COMMIT|grep ^Merge:|awk '{print $(NF)}')
          else
             REAL_COMMIT=$ZUUL_COMMIT
          fi
          UPSTREAM_CHANGE_ID=$(git show $REAL_COMMIT|grep Change-Id:|awk '{print $(NF)}')
          change_list=($(git show $REAL_COMMIT upper-constraints.txt|grep -P '^\+(?:(?!\+\+))|^-(?:(?!--))'))
          change_list=${change_list[@]/#[+-]/}
          popd
          if [ -z "${change_list//[[:space:]]/}" ]; then
              echo "INFO: No update in upper-constraints, Exiting"
              exit 0
          fi
          git clone http://review.rdoproject.org/r/gating_scripts $WORKSPACE/gating_scripts
          pushd $WORKSPACE/rdoinfo
          python $WORKSPACE/gating_scripts/buildsys-tags/add-buildsys-tags.py \
              -l $change_list \
              -r $RELEASE \
              -p $PHASE
          DIFF=$(git diff deps.yml)
          if [ -n "$DIFF" ]; then
            mkdir -p ~/.ssh
            cat >> ~/.ssh/config << EOF

          Host review.rdoproject.org
            IdentityFile $SSH_KEY
          EOF
            chmod 600 ~/.ssh/config
            sudo chmod 600 $SSH_KEY
            sudo chown jenkins:jenkins $SSH_KEY
            ssh-keyscan -p 29418 review.rdoproject.org >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            COMMIT_MSG="CBS tags sync with uc for $RELEASE-$PHASE\n\nUpstream-Id: $UPSTREAM_CHANGE_ID"
            git config user.name "rdo-trunk"
            git config user.email "javier.pena@redhat.com"
            git config gitreview.username "rdo-trunk"
            git checkout -b proposal
            git review -s -v
            echo -e $COMMIT_MSG | git commit -F- deps.yml
            # Just in case, check if there are changes between this version and the current review
            curl https://review.rdoproject.org/r/changes/rdoinfo~master~$CHANGE_ID/revisions/current/files/deps.yml/content |base64 -d > deps_current.yml
            diff deps.yml deps_current.yml
            if [ $? -ne 0 ]; then
                git review -t "rdoinfo-deps-uc-update-$RELEASE" < /dev/null
            fi
            popd
          fi
    triggers:
      - zuul
    node: rdo-centos-7
    wrappers:
      - credentials-binding:
        - file:
           credential-id: f8472527-c620-43b7-b4ed-3d3ec67ec63a
           variable: SSH_KEY


- job:
    name: rdo-send-stable-release
    defaults: rdo-global
    builders:
      - rdo-prepare-workspace-post
      - shell: |
          set -e -x
          if [ "${ZUUL_PROJECT}" != 'rdoinfo' ]; then
              zuul-cloner http://review.rdoproject.org/r rdoinfo
          fi
          # Currently releng requires rdoinfo to be in $HOME/rdoinfo
          rm -rf ~/rdoinfo
          ln -s $PWD/rdoinfo ~/rdoinfo
          zuul-cloner http://review.rdoproject.org/r rdo-infra/releng
          pushd rdo-infra/releng
          sudo pip install rdopkg==0.45.0
          sudo pip install .
          popd
          # Prepare environment to send a review
          mkdir -p ~/.ssh
          cat >> ~/.ssh/config << EOF

          Host review.rdoproject.org
            IdentityFile $SSH_KEY
          EOF
          chmod 600 ~/.ssh/config
          sudo chmod 600 $SSH_KEY
          sudo chown jenkins:jenkins $SSH_KEY
          ssh-keyscan -p 29418 review.rdoproject.org >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          git config --global --add user.name "rdo-trunk"
          git config --global --add user.email "javier.pena@redhat.com"
          git config --global --add gitreview.username "rdo-trunk"

          BASE_CMD="rdo_release_review -u rdo-trunk -c RDO -e dev@lists.rdoproject.org"
          RELEASES="newton ocata pike queens"
          for r in $RELEASES;do
            case $ZUUL_PROJECT in
              rdoinfo )
                pushd rdoinfo
                git checkout $ZUUL_COMMIT
                popd
                $BASE_CMD -r $r -p ~/rdoinfo
              ;;
              openstack/releases )
                # When using reviews from openstack/releases to generate new releases
                # we need to get the real commit (not the merge one) to search the
                # review using gerrit API.
                pushd openstack/releases
                SUBJECT=$(git log --oneline $ZUUL_COMMIT|head -1|cut -d " " -f 2)
                if [ $SUBJECT == "Merge" ]; then
                  REAL_COMMIT=$(git show $ZUUL_COMMIT|grep ^Merge:|awk '{print $(NF)}')
                else
                  REAL_COMMIT=$ZUUL_COMMIT
                fi
                $BASE_CMD -r $r -n commit:$REAL_COMMIT
                popd
              ;;
            esac
          done
    triggers:
      - zuul
    node: rdo-centos-7
    wrappers:
      - credentials-binding:
        - file:
           credential-id: f8472527-c620-43b7-b4ed-3d3ec67ec63a
           variable: SSH_KEY

- job:
    name: validate-buildsys-tags
    defaults: rdo-global
    builders:
      - rdo-prepare-workspace
      - rdo-log-setup
      - validate-buildsys-tags
    publishers:
      - rdo-rsync-logs
    triggers:
      - zuul
    wrappers:
      - timestamps
      - credentials-binding:
        - file:
           credential-id: 4b4632bd-f44b-446d-a8ca-b57eabef0a7c
           variable: LOG_SSH_KEY
    node: rdo-centos-7

- job:
    name: validate-dependencies-rebuilds
    defaults: rdo-global
    builders:
      - rdo-prepare-workspace
      - rdo-log-setup
      - find-dependencies-rebuilds
      - prepare-rpmfactory-workspace
      - shell: |
          set +e -x
          sudo yum install -y git centos-packager
          # clone scripts and run
          git clone http://review.rdoproject.org/r/gating_scripts

          FAILED=0
          fedora_rebuilds_file="$WORKSPACE/logs/fedora_rebuilds.txt"
          rdo_rebuilds_file="$WORKSPACE/logs/rdo_rebuilds.txt"
          pushd gating_scripts
          # Validate rebuilds of builds with config fedora-dependency
          echo "INFO: Validating updates for fedora-dependencies packages"
          while read target build
          do
              if [ -z $target -o -z $build ]; then
                  continue
              fi
              echo "INFO: Checking for $build on CBS"
              cbs buildinfo $build|grep "No such build"
              # If build already exist in CBS, don't need to rebuild
              # it from fedora
              if [ $? -ne 0 ];then
                  echo "INFO: build $build exists in CBS"
                  continue
              fi
              echo "INFO: validating $build on $target"
              ./validate_rebuild_fedora.sh $target $build
              if [ $? -ne 0 ];then
                  echo "ERROR: validation of $build failed on $target"
                  FAILED=1
              fi
          done <<< "$(cat $fedora_rebuilds_file)"
          # Check if builds with config rdo-dependency exist in CBS
          echo "INFO: Validating updates for rdo-dependencies packages"
          while read target build
          do
              if [ -z $target -o -z $build ]; then
                  continue
              fi
              echo "INFO: Checking for $build on CBS"
              cbs buildinfo $build|grep "No such build"
              if [ $? -eq 0 ];then
                  echo "ERROR: build $build does not exist in CBS"
                  FAILED=1
              fi
          done <<< "$(cat $rdo_rebuilds_file)"
          popd
          exit $FAILED
    publishers:
      - rdo-rsync-logs
    triggers:
      - zuul
    wrappers:
      - timestamps
      - credentials-binding:
        - file:
           credential-id: 4b4632bd-f44b-446d-a8ca-b57eabef0a7c
           variable: LOG_SSH_KEY
        - file:
           credential-id: e9b465e2-abfe-418c-8026-edc8c3f21a12
           variable: CLIENTSECRET
    node: rdo-centos-7

- job:
    name: rebuild-fedora-dependencies
    defaults: rdo-global
    builders:
      - rdo-prepare-workspace
      - rdo-log-setup
      - find-dependencies-rebuilds
      - prepare-rpmfactory-workspace
      - shell: |
          set +e -x
          sudo yum install -y git centos-packager
          # clone scripts and run
          git clone http://review.rdoproject.org/r/gating_scripts

          FAILED=0
          fedora_rebuilds_file="$WORKSPACE/logs/fedora_rebuilds.txt"
          pushd gating_scripts
          # Rebuilding fedora builds with config fedora-dependency
          echo "INFO: Rebuilding fedora-dependencies packages"
          while read target build
          do
              if [ -z $target -o -z $build ]; then
                  continue
              fi
              echo "INFO: Checking for $build on CBS"
              cbs buildinfo $build|grep "No such build"
              # If build already exist in CBS, don't need to rebuild
              # it from fedora
              if [ $? -ne 0 ];then
                  echo "INFO: build $build exists in CBS"
                  continue
              fi
              echo "INFO: validating $build on $target"
              ./rebuild_fedora.sh $target $build
              if [ $? -ne 0 ];then
                  echo "ERROR: rebuild of $build failed on $target"
                  FAILED=1
              fi
          done <<< "$(cat $fedora_rebuilds_file)"
          popd
          exit $FAILED
    publishers:
      - rdo-rsync-logs
    triggers:
      - zuul
    wrappers:
      - timestamps
      - credentials-binding:
        - file:
           credential-id: 4b4632bd-f44b-446d-a8ca-b57eabef0a7c
           variable: LOG_SSH_KEY
        - file:
           credential-id: e9b465e2-abfe-418c-8026-edc8c3f21a12
           variable: CLIENTSECRET
    node: rdo-centos-7
- project:
    name: rdoinfo-upper-constraints
    branch:
      - master
      - queens
      - pike
      - ocata
      - newton
    jobs:
      - 'rdoinfo-upper-constraints-update-{branch}'

- job:
    name: weirdo-validate-buildsys-tags
    defaults: rdo-global
    builders:
      - rdo-prepare-workspace
      - shell: |
          set -e -x
          zuul-cloner http://review.rdoproject.org/r rdo-infra/releng
          pushd rdo-infra/releng
          sudo pip install .
          popd
          export PARENT_JOB="validate-buildsys-tags"
          git clone http://review.rdoproject.org/r/gating_scripts
          pushd gating_scripts/buildsys-tags
          bash ./launch_weirdo_jobs.sh
          popd
    triggers:
      - zuul
    node: rdo-centos-7
    wrappers:
      - credentials-binding:
        - file:
           credential-id: 2b9107c5-c511-41e4-9012-a97af25bd295
           variable: WEIRDO_TOKEN_FILE

- job:
    name: update-buildsys-tags
    defaults: rdo-global
    builders:
      - rdo-prepare-workspace
      - rdo-log-setup
      - prepare-rpmfactory-workspace
      - shell: |
          set +e
          FAILED=0
          # Install requirements
          sudo yum install -y createrepo mock git centos-packager yum-utils
          sudo pip install ruamel.yaml rdopkg
          # clone scripts and run
          git clone http://review.rdoproject.org/r/gating_scripts
          pushd gating_scripts/buildsys-tags/
          # create_temporary_repos.sh will create input files for graffiti
          bash ./create_temporary_repos.sh $WORKSPACE/rdoinfo $WORKSPACE/logs
          popd
          sudo pip install  git+https://github.com/softwarefactory-project/graffiti
          # Files cbs_actions.txt, register.yaml and tags.yaml are created under $WORKSPACE/logs/info/
          # by create_temporary_repos.sh script
          # If there are register actions, they are executed first
          pushd $WORKSPACE/rdoinfo
          if [ -s $WORKSPACE/logs/info/register.yaml ]; then
              echo "INFO: Executing CBS register actions"
              cat $WORKSPACE/logs/info/register.yaml
              graffiti --config-file=$WORKSPACE/gating_scripts/buildsys-tags/graffiti_config.yaml register -f $WORKSPACE/logs/info/register.yaml
              if [ $? -ne 0 ]; then
                  FAILED=1
                  echo "ERROR: Executing CBS register actions"
              fi
          fi
          # If there are tag actions, they are executed
          if [ -s $WORKSPACE/logs/info/tags.yaml ]; then
              echo "INFO: Executing CBS tag actions"
              cat $WORKSPACE/logs/info/tags.yaml
              graffiti --config-file=$WORKSPACE/gating_scripts/buildsys-tags/graffiti_config.yaml tag -f $WORKSPACE/logs/info/tags.yaml
              if [ $? -ne 0 ]; then
                  FAILED=1
                  echo "ERROR: Executing CBS tag actions"
              fi
          fi
          popd
          # Check if tags have been applied as expected
          # format of cbs_actions.txt is <action>,<tag>,<build> where <action> is
          # "tag" for tagging actions.
          # Retrieve all builds information in one go
          awk -F , '/tag/ {
            builds[$2]=builds[$2] " " $3
          }
          END {
          for (tag in builds)
            print "##"tag;
            system("cbs buildinfo " builds[tag])
          }' cbs_actions.txt  > cbs_output.txt
          # Then analyze cbs command output to detect failures
          while read line; do
              [[ $line = \#\#* ]] && tag=${line:2}
              [[ $line = BUILD* ]] && build=${line:7} && build=${build% *}
              if [[ $line = Tags:* ]]; then
                  if [[ $line = Tags:*$tag* ]]; then
                      echo "INFO: package $build was added to tag $tag"
                  else
                      echo "ERROR: package $build was not included in tag $tag"
                      FAILED=1
                  fi
              fi
          done < cbs_output.txt

          exit $FAILED

    publishers:
      - rdo-rsync-logs
    triggers:
      - zuul
    wrappers:
      - credentials-binding:
        - file:
           credential-id: e9b465e2-abfe-418c-8026-edc8c3f21a12
           variable: CLIENTSECRET
        - file:
           credential-id: 4b4632bd-f44b-446d-a8ca-b57eabef0a7c
           variable: LOG_SSH_KEY
    node: rdo-centos-7

- job-template:
    name: rdoinfo-buildsys-tags-update-{release}-{phase}
    defaults: rdo-global
    builders:
      - rdo-prepare-workspace
      - prepare-rpmfactory-workspace
      - shell: |
          set +e -x
          RELEASE="{release}"
          PHASE="{phase}"
          # I want to run jobs for testing in odd days and release in even
          DAY=$(date +%-d)
          if [ $(($DAY%2)) -eq 0 -a $PHASE == "testing" ]||[ $(($DAY%2)) -ne 0 -a $PHASE == "release" ]; then
            exit 0
          fi
          # When updating packages from -testing to -release we want to automatically include
          # dependencies. For promotions from -candidate to -testing we'll keep it manual as
          # someone must create the build and justify the update.
          case $PHASE in
            testing )
              DEPS="-n"
            ;;
            release )
              DEPS=""
            ;;
          esac
          sudo yum install -y git centos-packager PyYAML
          sudo pip install git+https://github.com/softwarefactory-project/graffiti
          sudo pip install ruamel.yaml sh git-review
          git clone http://review.rdoproject.org/r/gating_scripts
          cd $WORKSPACE/rdoinfo
          python $WORKSPACE/gating_scripts/buildsys-tags/update-buildsys-tags.py \
            -c $WORKSPACE/gating_scripts/buildsys-tags/graffiti_config.yaml \
            -r $RELEASE \
            -p $PHASE \
            $DEPS
          DIFF=$(git diff rdo.yml deps.yml)
          if [ -n "$DIFF" ]; then
            mkdir -p ~/.ssh
            cat >> ~/.ssh/config << EOF

          Host review.rdoproject.org
            IdentityFile $SSH_KEY
          EOF
            chmod 600 ~/.ssh/config
            sudo chmod 600 $SSH_KEY
            sudo chown jenkins:jenkins $SSH_KEY
            ssh-keyscan -p 29418 review.rdoproject.org >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            # Check for an open change, if so reuse it
            change_info=$(ssh -p 29418 rdo-trunk@review.rdoproject.org \
            gerrit query --current-patch-set status:open project:rdoinfo owner:rdo-trunk branch:master \
            topic:"{release}"-"{phase}"-update)
            previous=$(echo "$change_info" | grep "^  number:" | awk '{{print $2}}')
            if [ -n "$previous" ]; then
                CHANGE_ID=$(echo "$change_info" | grep "^change" | awk '{{print $2}}')
                COMMIT_MSG="Promote CBS tags update for $RELEASE-$PHASE\n\nChange-Id: $CHANGE_ID\n"
            else
                COMMIT_MSG="Promote CBS tags update for $RELEASE-$PHASE"
            fi
            git config user.name "rdo-trunk"
            git config user.email "javier.pena@redhat.com"
            git config gitreview.username "rdo-trunk"
            git checkout -b proposal
            git review -s -v
            echo -e $COMMIT_MSG | git commit -F- rdo.yml deps.yml
            # Just in case, check if there are changes between this version and the current review
            curl https://review.rdoproject.org/r/changes/rdoinfo~master~$CHANGE_ID/revisions/current/files/rdo.yml/content |base64 -d > rdo_current.yml
            curl https://review.rdoproject.org/r/changes/rdoinfo~master~$CHANGE_ID/revisions/current/files/deps.yml/content |base64 -d > deps_current.yml
            diff rdo.yml rdo_current.yml
            DIFF_RDO=$?
            diff deps.yml deps_current.yml
            DIFF_DEPS=$?
            if [ $DIFF_DEPS -ne 0 -o $DIFF_RDO -ne 0 ]; then
                git review -t ""{release}"-"{phase}"-update" < /dev/null
            fi
          fi
    triggers:
      - zuul
    node: rdo-centos-7
    wrappers:
      - credentials-binding:
        - file:
           credential-id: f8472527-c620-43b7-b4ed-3d3ec67ec63a
           variable: SSH_KEY
        - file:
           credential-id: e9b465e2-abfe-418c-8026-edc8c3f21a12
           variable: CLIENTSECRET

- project:
    name: rdoinfo-buildsys-tags-update
    release:
      - newton
      - ocata
      - pike
    phase:
      - testing
      - release
    jobs:
      - 'rdoinfo-buildsys-tags-update-{release}-{phase}'

- job-template:
    name: 'rdoinfo-tripleo-{openstack_release}-{buildsys_phase}-{jobname}{suffix}'
    node: '{node}'
    wrappers:
      - build-timeout:
          timeout: '{timeout}'
      - timestamps
      - credentials-binding:
        - file:
           credential-id: 4b4632bd-f44b-446d-a8ca-b57eabef0a7c
           variable: LOG_SSH_KEY
    defaults: rdo-global
    builders:
      - net-info
      - rdo-prepare-workspace
      - rdo-log-setup
      - devstack-checkout
      - hack-nodepool-provider-setup
      - configure-rdoinfo-oooq-gate-job:
          openstack_release: "{openstack_release}"
          buildsys_phase: "{buildsys_phase}"
      # I need to clone oooq repo and adding custom config befor running quickstart
      - oooq-checkout
      - shell: |
          #!/bin/bash -xe
          # Create directory for used by rdo-rsync-logs
          mkdir -p $WORKSPACE/logs
          # If this configuration is not required, exit early
          if [ -f $WORKSPACE/not_required ]; then
              echo "Job for {openstack_release}-{buildsys_phase} not required"
              exit 0
          fi

          export TOCI_JOBTYPE={type}
          export STABLE_RELEASE={openstack_release}

          sudo rm -f /opt/stack/new/tripleo-quickstart/config/release/tripleo-ci/{openstack_release}.yml
          sudo mv tripleo.yml /opt/stack/new/tripleo-quickstart/config/release/tripleo-ci/{openstack_release}.yml

          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=0
          export DEVSTACK_GATE_EXERCISES=0
          export DEVSTACK_GATE_HORIZON=1

          export PROJECTS="openstack/diskimage-builder $PROJECTS"
          export PROJECTS="openstack/dib-utils $PROJECTS"
          export PROJECTS="openstack/instack $PROJECTS"
          export PROJECTS="openstack/instack-undercloud $PROJECTS"
          export PROJECTS="openstack/puppet-aodh $PROJECTS"
          export PROJECTS="openstack/puppet-barbican $PROJECTS"
          export PROJECTS="openstack/puppet-ceilometer $PROJECTS"
          export PROJECTS="openstack/puppet-ceph $PROJECTS"
          export PROJECTS="openstack/puppet-cinder $PROJECTS"
          export PROJECTS="openstack/puppet-ganesha $PROJECTS"
          export PROJECTS="openstack/puppet-glance $PROJECTS"
          export PROJECTS="openstack/puppet-gnocchi $PROJECTS"
          export PROJECTS="openstack/puppet-heat $PROJECTS"
          export PROJECTS="openstack/puppet-horizon $PROJECTS"
          export PROJECTS="openstack/puppet-ironic $PROJECTS"
          export PROJECTS="openstack/puppet-keystone $PROJECTS"
          export PROJECTS="openstack/puppet-mistral $PROJECTS"
          export PROJECTS="openstack/puppet-neutron $PROJECTS"
          export PROJECTS="openstack/puppet-nova $PROJECTS"
          export PROJECTS="openstack/puppet-openstack_extras $PROJECTS"
          export PROJECTS="openstack/puppet-openstacklib $PROJECTS"
          export PROJECTS="openstack/puppet-oslo $PROJECTS"
          export PROJECTS="openstack/puppet-pacemaker $PROJECTS"
          export PROJECTS="openstack/puppet-sahara $PROJECTS"
          export PROJECTS="openstack/puppet-swift $PROJECTS"
          export PROJECTS="openstack/puppet-tripleo $PROJECTS"
          export PROJECTS="openstack/puppet-vswitch $PROJECTS"
          export PROJECTS="openstack/puppet-zaqar $PROJECTS"
          export PROJECTS="openstack/python-ironic-inspector-client $PROJECTS"
          export PROJECTS="openstack/python-tripleoclient $PROJECTS"
          export PROJECTS="openstack/tripleo-common $PROJECTS"
          export PROJECTS="openstack/tripleo-puppet-elements $PROJECTS"
          export PROJECTS="openstack/tripleo-quickstart-extras $PROJECTS"
          export PROJECTS="openstack/tripleo-ui $PROJECTS"

          # some projects are not in devstack-gate, we need them to grab logs:
          export PROJECTS="openstack/aodh $PROJECTS"
          export PROJECTS="openstack/barbican $PROJECTS"
          export PROJECTS="openstack/gnocchi $PROJECTS"
          export PROJECTS="openstack/panko $PROJECTS"
          export PROJECTS="openstack/mistral $PROJECTS"

          sudo chown -hR $(whoami) /opt/git
          function gate_hook {{
              bash -xe /opt/stack/new/tripleo-ci/toci_gate_test.sh
          }}
          export -f gate_hook
          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
    publishers:
      - rdo-rsync-logs

- project:
    name: gate-rdoinfo-tripleo-quickstart
    jobs:
      - 'rdoinfo-tripleo-{openstack_release}-{buildsys_phase}-{jobname}{suffix}':
          jobname: 'centos-7-singlenode-featureset023'
          suffix: '-nv'
          type: 'gate-singlenode-featureset023'
          openstack_release: master
          buildsys_phase: testing
          node: upstream-centos-7
          triggers:
            - zuul
          branch-override: default
          timeout: 180
      - 'rdoinfo-tripleo-{openstack_release}-{buildsys_phase}-{jobname}{suffix}':
          jobname: 'centos-7-multinode-1ctlr-featureset005'
          suffix: '-nv'
          type: 'gate-multinode-1ctlr-featureset005'
          openstack_release: pike
          buildsys_phase: testing
          node: upstream-centos-7-2-node
          triggers:
            - zuul
          branch-override: default
          timeout: 180
      - 'rdoinfo-tripleo-{openstack_release}-{buildsys_phase}-{jobname}{suffix}':
          jobname: 'centos-7-multinode-1ctlr-featureset005'
          suffix: '-nv'
          type: 'gate-multinode-1ctlr-featureset005'
          openstack_release: pike
          buildsys_phase: release
          node: upstream-centos-7-2-node
          triggers:
            - zuul
          branch-override: default
          timeout: 180
      - 'rdoinfo-tripleo-{openstack_release}-{buildsys_phase}-{jobname}{suffix}':
          jobname: 'centos-7-multinode-1ctlr-featureset005'
          suffix: '-nv'
          type: 'gate-multinode-1ctlr-featureset005'
          openstack_release: ocata
          buildsys_phase: testing
          node: upstream-centos-7-2-node
          triggers:
            - zuul
          branch-override: default
          timeout: 180
      - 'rdoinfo-tripleo-{openstack_release}-{buildsys_phase}-{jobname}{suffix}':
          jobname: 'centos-7-multinode-1ctlr-featureset005'
          suffix: '-nv'
          type: 'gate-multinode-1ctlr-featureset005'
          openstack_release: ocata
          buildsys_phase: release
          node: upstream-centos-7-2-node
          triggers:
            - zuul
          branch-override: default
          timeout: 180
      - 'rdoinfo-tripleo-{openstack_release}-{buildsys_phase}-{jobname}{suffix}':
          jobname: 'centos-7-multinode-1ctlr-featureset005'
          suffix: '-nv'
          type: 'gate-multinode-1ctlr-featureset005'
          openstack_release: newton
          buildsys_phase: testing
          node: upstream-centos-7-2-node
          triggers:
            - zuul
          branch-override: default
          timeout: 180
      - 'rdoinfo-tripleo-{openstack_release}-{buildsys_phase}-{jobname}{suffix}':
          jobname: 'centos-7-multinode-1ctlr-featureset005'
          suffix: '-nv'
          type: 'gate-multinode-1ctlr-featureset005'
          openstack_release: newton
          buildsys_phase: release
          node: upstream-centos-7-2-node
          triggers:
            - zuul
          branch-override: default
          timeout: 180

