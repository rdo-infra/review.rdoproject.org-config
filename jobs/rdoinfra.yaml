- job:
    name: 'tox-jjb'
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          set +e
          cd $ZUUL_PROJECT
          tox -e jjb
    triggers:
      - zuul
    node: bare-centos-7

- job:
    name: 'publish-cico-jjb'
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          set +e
          cd $ZUUL_PROJECT
          # Ensure that there's no failure before pushing
          tox -e jjb

          # Update jobs
          source .tox/jjb/bin/activate
          pushd jenkins
          jenkins-jobs --conf $JJB_CONFIG update jobs
          popd
    triggers:
      - zuul
    node: bare-centos-7
    wrappers:
      - credentials-binding:
        - file:
           credential-id: b578a3ee-cf49-4250-899a-0bc7f84363c2
           variable: JJB_CONFIG

- job:
    name: gate-rdo-infra-ansible-lint
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          set -e
          virtualenv $WORKSPACE/ansible-lint
          source $WORKSPACE/ansible-lint/bin/activate
          pip install ansible-lint
          find $WORKSPACE/$ZUUL_PROJECT -type f -regex '.*.y[a]?ml' -print0 | xargs -t -n1 -0 ansible-lint -x ANSIBLE0006,ANSIBLE0010,ANSIBLE0012,ANSIBLE0013,ANSIBLE0014
    triggers:
      - zuul
    node: bare-centos-7

- job:
    name: gate-rdo-kolla-build-containers
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          set -e
          mkdir $WORKSPACE/roles
          ln -s $WORKSPACE/$ZUUL_PROJECT/ $WORKSPACE/roles/kolla-build

          sudo yum -y install python-docker-py libselinux-python
          # Need to inherit system-site-packages for libselinux-python and python-yum
          virtualenv --system-site-packages $WORKSPACE/ansible
          source $WORKSPACE/ansible/bin/activate
          pip install ansible==2.3.0.0 ara

          export ara_location=$(python -c "import os,ara; print(os.path.dirname(ara.__file__))")
          export ANSIBLE_CALLBACK_PLUGINS=$ara_location/plugins/callbacks
          export ANSIBLE_ACTION_PLUGINS=$ara_location/plugins/actions
          export ANSIBLE_LIBRARY=$ara_location/plugins/modules
          export ANSIBLE_ROLES_PATH=$WORKSPACE/roles

          export ARA_DATABASE="sqlite:///$WORKSPACE/ara.sqlite"

          cat << EOF > ${WORKSPACE}/playbook.yml
          ---
          - name: Build Kolla images
            hosts: localhost
            become: yes
            become_user: root
            vars:
              kolla_rdo_images:
                - openstack-base
                - nova
            tasks:
              - include_role:
                  name: "kolla-build"
          EOF
          ansible-playbook -i localhost $WORKSPACE/playbook.yml --tags "setup,build"
    triggers:
      - zuul
    publishers:
      - postbuildscript:
          builders:
            - shell: |
                  mkdir $WORKSPACE/artifacts
                  export ARA_DATABASE="sqlite:///$WORKSPACE/ara.sqlite"
                  sudo -E $WORKSPACE/ansible/bin/ara generate html $WORKSPACE/artifacts/ara

                  # Ensure permissions allow artifact uploading
                  sudo chown -R "$(id -u).$(id -g)" $WORKSPACE/artifacts
            - zuul-swift-upload
          script-only-if-succeeded: False
          script-only-if-failed: False
    node: bare-centos-7

- builder:
    name: rdo-infra-role-integration
    builders:
      - shell: |
            set -e
            mkdir $WORKSPACE/roles
            ln -s $WORKSPACE/$ZUUL_PROJECT/ $WORKSPACE/roles/{role}

            # Need to inherit system-site-packages for libselinux-python and python-yum
            virtualenv --system-site-packages $WORKSPACE/ansible
            source $WORKSPACE/ansible/bin/activate
            pip install ansible==2.3.0.0 ara

            export ara_location=$(python -c "import os,ara; print(os.path.dirname(ara.__file__))")
            export ANSIBLE_CALLBACK_PLUGINS=$ara_location/plugins/callbacks
            export ANSIBLE_ACTION_PLUGINS=$ara_location/plugins/actions
            export ANSIBLE_LIBRARY=$ara_location/plugins/modules
            export ANSIBLE_ROLES_PATH=$WORKSPACE/roles

            export ARA_DATABASE="sqlite:///$WORKSPACE/ara.sqlite"

            cat << EOF > $WORKSPACE/playbook.yml
            ---
            - name: Apply {role} role
              hosts: localhost
              become: yes
              become_user: root
              tasks:
                - include_role:
                    name: "{role}"
            EOF
            ansible-playbook -i localhost $WORKSPACE/playbook.yml

- job-template:
    name: gate-rdo-infra-{role}-integration
    defaults: global
    builders:
      - prepare-workspace
      - rdo-infra-role-integration:
          role: '{role}'
    triggers:
      - zuul
    publishers:
      - postbuildscript:
          builders:
            - shell: |
                  mkdir $WORKSPACE/artifacts
                  export ARA_DATABASE="sqlite:///$WORKSPACE/ara.sqlite"
                  sudo -E $WORKSPACE/ansible/bin/ara generate html $WORKSPACE/artifacts/ara

                  # Ensure permissions allow artifact uploading
                  sudo chown -R "$(id -u).$(id -g)" $WORKSPACE/artifacts
            - zuul-swift-upload
          script-only-if-succeeded: False
          script-only-if-failed: False
    node: bare-centos-7

- project:
    name: gate-rdo-infra-role-integration
    role:
      - base
      - monitoring
      - rdobot
    jobs:
      - 'gate-rdo-infra-{role}-integration'

- job:
    name: 'tox-flake8'
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          set +e
          cd $ZUUL_PROJECT
          tox -e flake8
    triggers:
      - zuul
    node: bare-centos-7
