# This file won't be updated and must be updated manually
# Test

- builder:
    name: prepare-rpmfactory-workspace
    builders:
      - shell: |
          # If this is called in a periodic job, these will not be set
          echo "Use default for ZUUL_BRANCH and ZUUL_REF if needed"
          export ZUUL_BRANCH=${ZUUL_BRANCH:-master}
          export ZUUL_REF=${ZUUL_REF:-None}
          # In the post pipeline ZUUL_REF is master but does not behave as we want
          # So fall back on None
          [ "$ZUUL_REF" = "master" ] && ZUUL_REF=None || true
          echo "Clean workspace"
          rm -Rf ./*

    name: puppet-prepare-node
    builders:
      - shell: |
          # If this is called in a periodic job, these will not be set
          if [ -f /usr/bin/yum ]; then
              sudo yum -y remove facter puppet rdo-release
              sudo yum -y install libxml2-devel libxslt-devel ruby-devel rsync
              sudo yum -y groupinstall "Development Tools"
          elif [ -f /usr/bin/apt-get ]; then
              sudo apt-get remove -y --purge facter puppet puppet-common
              sudo apt-get update
              sudo apt-get install -y libxml2-dev libxslt-dev zlib1g-dev rsync
          fi

- job:
    name: 'pkg-validate'
    defaults: global
    builders:
      - prepare-rpmfactory-workspace
      - shell: |
          git clone http://softwarefactory-project.io/r/rpmfactory
          cd rpmfactory/gating
          ./pkg-validate.sh
    triggers:
      - zuul
    node: koji-centos-7

- job:
    name: 'pkg-export'
    defaults: global
    builders:
      - prepare-rpmfactory-workspace
      - shell: |
          git clone http://softwarefactory-project.io/r/rpmfactory
          cd rpmfactory/gating
          ./pkg-export.sh
    triggers:
      - zuul
    node: koji-centos-7

- job:
    name: 'tox-validate'
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          # Tox update should be put in the slave preparation script
          env
          sudo pip install -U tox
          cd $ZUUL_PROJECT
          [ -f setup.cfg ] && sed 's/^version =.*//' -i setup.cfg
          case $ZUUL_PROJECT in
            nova|neutron|ceilometer )
              tox -epy27
            ;;
            keystone )
              # https://bugs.launchpad.net/keystone/+bug/1505374
              # Yest it's ugly...
              git config user.email "jenkins@localhost.tld"
              git config user.name "Jenkins"
              git fetch https://review.openstack.org/openstack/keystone refs/changes/00/233800/1 && git cherry-pick FETCH_HEAD
              tox -epy27
            ;;
            glance )
              ./run_tests.sh --concurrency 4 -V -P
            ;;
            * )
              wget "http://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/liberty" -O upper-constraints.txt
              run-tox.sh py27
            ;;
          esac
    triggers:
      - zuul
    node: koji-centos-7

- job:
    name: 'upstream-update'
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          date
          # Manage SSH keyring for git+push on rpmfactory
          chmod 600 $SECRETKEY
          eval $(ssh-agent)
          ssh-add $SECRETKEY
          echo -e "Host *\n  StrictHostKeyChecking no" > ~/.ssh/config
          chmod 600 ~/.ssh/config
          # Prepare sfrdo
          git clone http://softwarefactory-project.io/r/p/python-sfrdo.git --depth 1
          # python-virtualenv installed in the next relase
          # http://softwarefactory-project.io/r/gitweb?p=software-factory.git;a=blob_plain;f=image/packages/rpm_centos.txt;hb=HEAD
          pushd python-sfrdo
            virtualenv ../sfrdo-venv
            . ../sfrdo-venv/bin/activate
            pip install -r requirements.txt
            python setup.py install
          popd
          # Run script
          sfrdo sync_repo --type All
    wrappers:
      - credentials-binding:
        - file:
           credential-id: d3e139ef-cd37-4395-b4f0-2d403acbf727
           variable: SECRETKEY
    triggers:
      - zuul
    node: koji-centos-7

- job:
    name: 'distgit-update'
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          date
          # Manage SSH keyring for git+push on rpmfactory
          chmod 600 $SECRETKEY
          eval $(ssh-agent)
          ssh-add $SECRETKEY
          echo -e "Host *\n  StrictHostKeyChecking no" > ~/.ssh/config
          chmod 600 ~/.ssh/config
          # Prepare sfrdo
          git clone http://softwarefactory-project.io/r/p/python-sfrdo.git --depth 1
          # python-virtualenv installed in the next relase
          # http://softwarefactory-project.io/r/gitweb?p=software-factory.git;a=blob_plain;f=image/packages/rpm_centos.txt;hb=HEAD
          pushd python-sfrdo
            virtualenv ../sfrdo-venv
            . ../sfrdo-venv/bin/activate
            pip install -r requirements.txt
            python setup.py install
          popd
          # Run script
          sfrdo sync_repo --type All --distgit
    wrappers:
      - credentials-binding:
        - file:
           credential-id: d3e139ef-cd37-4395-b4f0-2d403acbf727
           variable: SECRETKEY
    triggers:
      - zuul
    node: koji-centos-7

- job:
    name: 'delorean-ci'
    defaults: global
    builders:
      - prepare-rpmfactory-workspace
      - shell: |
          export GERRIT_CLONE_URL="http://rpmfactory.beta.rdoproject.org/r"
          git clone https://review.gerrithub.io/openstack-packages/delorean --depth 1
          cd delorean
          timeout --signal=SIGKILL 3600 ./scripts/run_tests.sh
    triggers:
      - zuul
    node: koji-centos-7


- job:
    name: 'puppet-lint'
    defaults: global
    builders:
      - prepare-rpmfactory-workspace
      - puppet-prepare-node
      - shell: |
          if [ -f Modulefile -o -f metadata.json ]; then
            if [ -f Modulefile ]; then
              MODULE=$(awk '/^name/ {print $NF}' Modulefile |tr -d \"\')
            elif [ -f metadata.json ]; then
              MODULE=$(python -c 'import json;print json.load(open("metadata.json"))["name"]')
            fi
            if [ -z "$MODULE" ]; then
              echo "Module name not defined in Modulefile or metadata.json"
            else
              mkdir -p "$MODULE"
              rsync -a --exclude="$MODULE" --exclude ".*" . "$MODULE"
              cd "$MODULE"
            fi
          fi
          if [ -f Gemfile ]; then
            mkdir .bundled_gems
            export GEM_HOME=`pwd`/.bundled_gems
            gem install bundler --no-rdoc --no-ri --verbose
            $GEM_HOME/bin/bundle install --without system_tests
            $GEM_HOME/bin/bundle exec rake lint 2>&1
          else
            rake lint 2>&1
          fi
    triggers:
      - zuul
    node: bare-centos-7

- job:
    name: 'puppet-syntax'
    defaults: global
    builders:
      - prepare-rpmfactory-workspace
      - puppet-prepare-node
    builders:
      - shell: |
          find . -iname *.pp | xargs puppet parser validate --modulepath=`pwd`/modules
          for f in `find . -iname *.erb` ; do
            erb -x -T '-' $f | ruby -c
          done
    triggers:
      - zuul
    node: bare-centos-7

- job:
    name: 'puppet-spec'
    defaults: global
    builders:
      - prepare-rpmfactory-workspace
      - puppet-prepare-node
    builders:
      - shell: |
          export PUPPET_GEM_VERSION='~> 3.8.0'
          mkdir .bundled_gems
          export GEM_HOME=`pwd`/.bundled_gems
          gem install bundler --no-rdoc --no-ri --verbose
          $GEM_HOME/bin/bundle install --retry 3
          $GEM_HOME/bin/bundle exec rake spec SPEC_OPTS='--format documentation'
    triggers:
      - zuul
    node: bare-centos-7
