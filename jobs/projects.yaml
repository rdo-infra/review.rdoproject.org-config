# This file won't be updated and must be updated manually
# Test

- builder:
    name: prepare-rpmfactory-workspace
    builders:
      - shell: |
          # If this is called in a periodic job, these will not be set
          echo "Use default for ZUUL_BRANCH and ZUUL_REF if needed"
          export ZUUL_BRANCH=${ZUUL_BRANCH:-master}
          export ZUUL_REF=${ZUUL_REF:-None}
          # In the post pipeline ZUUL_REF is master but does not behave as we want
          # So fall back on None
          [ "$ZUUL_REF" = "master" ] && ZUUL_REF=None || true
          echo "Clean workspace"
          rm -Rf ./*

- job:
    name: 'pkg-validate'
    defaults: global
    builders:
      - prepare-rpmfactory-workspace
      - shell: |
          git clone http://softwarefactory-project.io/r/rpmfactory
          cd rpmfactory/gating
          ./pkg-validate.sh
    triggers:
      - zuul
    node: koji-centos-7

- job:
    name: 'pkg-export'
    defaults: global
    builders:
      - prepare-rpmfactory-workspace
      - shell: |
          git clone http://softwarefactory-project.io/r/rpmfactory
          cd rpmfactory/gating
          ./pkg-export.sh
    triggers:
      - zuul
    node: koji-centos-7

- job:
    name: 'tox-validate'
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          # Tox update should be put in the slave preparation script
          env
          sudo pip install -U tox
          cd $ZUUL_PROJECT
          [ -f setup.cfg ] && sed 's/^version =.*//' -i setup.cfg
          case $ZUUL_PROJECT in
            nova|neutron|ceilometer )
              tox -epy27
            ;;
            keystone )
              # https://bugs.launchpad.net/keystone/+bug/1505374
              # Yest it's ugly...
              git config user.email "jenkins@localhost.tld"
              git config user.name "Jenkins"
              git fetch https://review.openstack.org/openstack/keystone refs/changes/00/233800/1 && git cherry-pick FETCH_HEAD
              tox -epy27
            ;;
            glance )
              ./run_tests.sh --concurrency 4 -V -P
            ;;
            * )
              wget "http://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/liberty" -O upper-constraints.txt
              run-tox.sh py27
            ;;
          esac
    triggers:
      - zuul
    node: koji-centos-7

- job:
    name: 'upstream-update'
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          # Manage SSH keyring for git+push on rpmfactory
          chmod 600 $SECRETKEY
          eval $(ssh-agent)
          ssh-add $SECRETKEY
          echo -e "Host *\n  StrictHostKeyChecking no" > ~/.ssh/config
          chmod 600 ~/.ssh/config
          # Prepare sfrdo
          git clone http://softwarefactory-project.io/r/p/python-sfrdo.git --depth 1
          # python-virtualenv installed in the next relase
          # http://softwarefactory-project.io/r/gitweb?p=software-factory.git;a=blob_plain;f=image/packages/rpm_centos.txt;hb=HEAD
          pushd python-sfrdo
            virtualenv ../sfrdo-venv
            . ../sfrdo-venv/bin/activate
            pip install -r requirements.txt
            python setup.py install
          popd
          # Run script
          sfrdo sync_repo --type All
    wrappers:
      - credentials-binding:
        - file:
           credential-id: d3e139ef-cd37-4395-b4f0-2d403acbf727
           variable: SECRETKEY
    triggers:
      - zuul
    node: koji-centos-7

- job:
    name: 'distgit-update'
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          # Manage SSH keyring for git+push on rpmfactory
          chmod 600 $SECRETKEY
          eval $(ssh-agent)
          ssh-add $SECRETKEY
          echo -e "Host *\n  StrictHostKeyChecking no" > ~/.ssh/config
          chmod 600 ~/.ssh/config
          # Prepare sfrdo
          git clone http://softwarefactory-project.io/r/p/python-sfrdo.git --depth 1
          # python-virtualenv installed in the next relase
          # http://softwarefactory-project.io/r/gitweb?p=software-factory.git;a=blob_plain;f=image/packages/rpm_centos.txt;hb=HEAD
          pushd python-sfrdo
            virtualenv ../sfrdo-venv
            . ../sfrdo-venv/bin/activate
            pip install -r requirements.txt
            python setup.py install
          popd
          # Run script
          sfrdo sync_repo --type All --distgit
    wrappers:
      - credentials-binding:
        - file:
           credential-id: d3e139ef-cd37-4395-b4f0-2d403acbf727
           variable: SECRETKEY
    triggers:
      - zuul
    node: koji-centos-7

- job:
    name: 'delorean-ci'
    defaults: global
    builders:
      - prepare-rpmfactory-workspace
      - shell: |
          export GERRIT_CLONE_URL="http://rpmfactory.beta.rdoproject.org/r"
          env
          git clone https://review.gerrithub.io/openstack-packages/delorean --depth 1
          cd delorean
          # temporary fix
          git config user.email "you@temporary.com"
          git config user.name "Temporary"
          git fetch https://review.gerrithub.io/openstack-packages/delorean refs/changes/94/262694/1 && git cherry-pick FETCH_HEAD
          sudo usermod -a -G mock jenkins
          sudo su - jenkins
          id
          # end temporary fix
          timeout --signal=SIGKILL 3600 ./scripts/run_tests.sh
    triggers:
      - zuul
    node: koji-centos-7

# Gitnetics jobs

- scm:
    name: gitnetics
    scm:
        - git:
            basedir: gitnetics
            url: https://github.com/gabrielecerami/gitnetics.git
            skip-tag: true
            branches:
                - master

- trigger:
    name: upstream-gerrit-merge-event
    triggers:
        - gerrit:
            server-name: Openstack_rdo-ci-service
            silent: true
            trigger-on:
                - change-merged-event
            projects:
                - project-compare-type: 'ANT'
                  project-pattern: openstack/nova
                  branches:
                      - branch-compare-type: 'ANT'
                        branch-pattern: 'stable/*'
                  skip-vote:
                      successful: true
                      failed: true
                      unstable: true
                      notbuilt: true

- trigger:
    name: replica-gerrit-recombination-create-event
    triggers:
        - gerrit:
            server-name: rpmfactory_rdo-ci-service
            silent: true
            trigger-on:
                - patchset-created-event:
                    exclude-drafts: false
                    exclude-trivial-rebase: false
                    exclude-no-code-change: false
            projects:
                - project-compare-type: 'ANT'
                  project-pattern: nova
                  branches:
                      - branch-compare-type: 'ANT'
                        branch-pattern: 'recomb-*'
                  skip-vote:
                      successful: true
                      failed: true
                      unstable: true
                      notbuilt: true

- trigger:
    name: replica-gerrit-recombination-vote-event
    triggers:
        - gerrit:
            server-name: rpmfactory-nonvoting_rdo-ci-service
            silent: true
            trigger-on:
                - comment-added-event:
                    approval-category: 'Code-Review'
                    approval-value: 2
                - comment-added-event:
                    approval-category: 'Verified'
                    approval-value: 1
            projects:
                - project-compare-type: 'ANT'
                  project-pattern: nova
                  branches:
                      - branch-compare-type: 'ANT'
                        branch-pattern: 'recomb-original-*'
                      - branch-compare-type: 'ANT'
                        branch-pattern: 'recomb-patches-*'
                  skip-vote:
                      successful: true
                      failed: true
                      unstable: true
                      notbuilt: true

- trigger:
    name: daily-once
    triggers:
        - timed: '@daily'

- job:
    name: gitnetics-upstream-changes
    scm:
        - gitnetics
        - opm-gate
    triggers:
        - daily-once
        - upstream-gerrit-merge-event
    builders:
        - shell: |
            PROJECTS_CONF="projects/projects.yaml"
            PROJECTS_DIR="$WORKSPACE/projects"
            mkdir -p $PROJECTS_DIR

            base_command="python gitnetics/gitnetics.py --projects-conf $PROJECTS_CONF --base-dir $PROJECTS_DIR"
            if [ -n "$GERRIT_PROJECT" ]; then
                # triggered by gerrit event
                $base_command --projects $GERRIT_PROJECT --watch-branches $GERRIT_BRANCH poll-original
            else
                # triggered by timer
                $base_command poll-original
            fi

- job:
    name: gitnetics-merge-recombinations
    scm:
        - gitnetics
        # FIXME: a repo that stores projects configurations is needed
    triggers:
        - replica-gerrit-recombination-vote-event
        - daily-once
    builders:
        - shell: |
            PROJECTS_CONF="projects/projects.yaml"
            PROJECTS_DIR="$WORKSPACE/projects"
            mkdir -p $PROJECTS_DIR
            base_command="python gitnetics/gitnetics.py --projects-conf $PROJECTS_CONF --base-dir $PROJECTS_DIR"
            if [ -n "$GERRIT_PROJECT" ]; then
                # triggered by gerrit event
                $base_command --projects $GERRIT_PROJECT merge-recombinations --recombination-id $GERRIT_CHANGE_NUMBER
            else
                # triggered by timer
                $base_command merge-recombinations
            fi

- job:
    name: gitnetics-recombinations-tests
    scm:
        - gitnetics
    triggers:
        - replica-gerrit-recombination-event
        - daily-once
    builders:
        - shell: |
            PROJECTS_CONF="projects/projects.yaml"
            PROJECTS_DIR="$WORKSPACE/projects"
            mkdir -p $PROJECTS_DIR
            base_command="python gitnetics/gitnetics.py --projects-conf $PROJECTS_CONF --base-dir $PROJECTS_DIR"
            if [ -n "$GERRIT_PROJECT" ]; then
                # triggered by gerrit event
                $base_command --projects $GERRIT_PROJECT --change-id $GERRIT_CHANGE_NUMBER prepare-tests
            else
                # triggered by timer
               $base_command prepare-tests
            fi

            # Stub: this shoudl analyze yaml file for tests
            for dir in tests; do
                cd $dir
                tox -epy 2.7
            done

- job:
    name: gitnetics-repos-maintenance
    scm:
        - gitnetics
        - opm-gate
    triggers:
        - daily-once
    builders:
        - shell: |
            PROJECTS_CONF="projects/projects.yaml"
            PROJECTS_DIR="$WORKSPACE/projects"
            mkdir -p $PROJECTS_DIR

            python gitnetics/gitnetics.py --projects-conf $PROJECTS_CONF --base-dir $PROJECTS_DIR cleanup

