- builder:
    name: dlrn-gate-repository
    builders:
      - shell: |
          # This builder, when run from a child job of a DLRN-rpmbuild job,
          # configures the DLRN repository that was uploaded as an artifact
          # of the parent DLRN-rpmbuild job.
          # This allows to install the packages in that repository and test
          # them.
          set +e
          # Re-construct the expected repository URL
          ZUUL_REF=$(echo ${ZUUL_REF} |cut -f4 -d /)
          LOG_PATH="${BASE_LOG_PATH}/${ZUUL_PIPELINE}/DLRN-rpmbuild/${ZUUL_REF}"
          artifacts="${SWIFT_artifacts_LOGSERVER_PREFIX}/${LOG_PATH}/artifacts"

          # If there's no repository to configure, stop here
          curl -o /dev/null -sIf "${artifacts}" || exit 1

          # Find the latest repository hash
          # If DLRN built multiple packages, there will be multiple repositories.
          # We want the latest repository which contains all of the packages that were just built.
          hash=$(curl -s "${artifacts}/centos/repos/report.html" |grep repo |sed 's/.*"\([^"]*\)".*/\1/' |head -n1)
          repository="${artifacts}/centos/repos/${hash}"

          # Configure the repository
          name="delorean-zuul-${ZUUL_REF}"
          sudo bash -c "cat << EOF > /etc/yum.repos.d/${name}.repo
          [${name}]
          name=${name}
          baseurl=${repository}
          enabled=1
          gpgcheck=0
          priority=1
          EOF"

- builder:
    name: prepare-dlrn
    builders:
      - shell: |
          set +e
          sudo yum -y install createrepo mock redhat-rpm-config rpmdevtools
          sudo usermod -a -G mock jenkins

          # Build packages in a tmpfs so we don't rely on VM I/O performance
          cat << EOF | sudo tee /etc/mock/site-defaults.cfg
          config_opts['plugin_conf']['tmpfs_enable'] = True
          config_opts['plugin_conf']['tmpfs_opts'] = {}
          config_opts['plugin_conf']['tmpfs_opts']['required_ram_mb'] = 2048
          config_opts['plugin_conf']['tmpfs_opts']['max_fs_size'] = '4g'
          config_opts['plugin_conf']['tmpfs_opts']['mode'] = '0755'
          config_opts['plugin_conf']['tmpfs_opts']['keep_mounted'] = True
          EOF

          # Clone DLRN if it's not provided by Zuul (ex: dist-git commits)
          if [[ ! -e "DLRN" ]]; then
            if [ -e $(which zuul-cloner) ]; then
              zuul-cloner http://review.rdoproject.org/r DLRN
            else
              git clone http://review.rdoproject.org/r/p/DLRN.git --depth 1
            fi
          fi

- job:
    name: 'DLRN-pep8'
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          set +e
          cd $ZUUL_PROJECT
          tox -e pep8
    triggers:
      - zuul
    node: bare-centos-7

- job:
    name: 'DLRN-py27'
    defaults: global
    builders:
      - prepare-workspace
      - shell: |
          set +e
          cd $ZUUL_PROJECT
          tox -e py27
    triggers:
      - zuul
    node: bare-centos-7

- job:
    name: 'DLRN-rpmbuild'
    defaults: global
    builders:
      - prepare-workspace
      - prepare-dlrn
      - shell: |
          set +e
          # This job supports building reviews for both review.rdoproject.org
          # and review.openstack.org. Builds that are run as third party for
          # review.o.o are in the Zuul pipelines prefixed by "openstack-".
          pushd DLRN
          if [[ "${ZUUL_PIPELINE}" =~ "openstack-" ]]; then
              timeout --signal=SIGKILL 3600 ./scripts/run_project_tests.sh http://review.rdoproject.org/r/p/rdoinfo.git
              ret=$?
          else
              timeout --signal=SIGKILL 3600 ./scripts/run_tests.sh http://review.rdoproject.org/r/p/rdoinfo.git
              ret=$?
          fi
          popd

          # Retrieve logs/repositories/packages
          mkdir artifacts
          cp -a DLRN/logs/* artifacts/

          exit $ret
    publishers:
      - zuul-swift-upload
    triggers:
      - zuul
    node: bare-centos-7
