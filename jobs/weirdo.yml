- builder:
    name: prepare-weirdo
    builders:
      - shell: |
          CLONEMAP=`mktemp`
          function cleanup {
              rm -f $CLONEMAP
          }
          trap cleanup EXIT
          cat > $CLONEMAP << EOF
          clonemap:
            - name: 'rdo-infra/ansible-role-weirdo-(.*)'
              dest: 'weirdo/playbooks/roles/\1'
          EOF

          # Clone WeIRDO if it's not provided by Zuul (ex: commits from WeIRDO roles)
          [[ ! -e "weirdo" ]] && git clone https://review.rdoproject.org/r/rdo-infra/weirdo.git --depth 1

          # Zuul clone WeIRDO roles at their expected location
          zuul-cloner -m $CLONEMAP \
            https://review.rdoproject.org/r \
            rdo-infra/ansible-role-weirdo-common \
            rdo-infra/ansible-role-weirdo-kolla \
            rdo-infra/ansible-role-weirdo-packstack \
            rdo-infra/ansible-role-weirdo-puppet-openstack

- builder:
    name: weirdo-ansible-playbook-builder
    builders:
        - shell: |
            # WeIRDO uses ARA for ansible-playbook run visualization
            export ARA_DATABASE="sqlite:///$WORKSPACE/ara-$JOB_NAME.sqlite"

            if [[ "{openstack_release}" != "master" ]]; then
                version="stable/{openstack_release}"
            else
                version="{openstack_release}"
            fi

            pushd weirdo
            git log -n 5 --oneline

            # We're provisioning on localhost
            cat <<EOF >hosts
            localhost ansible_connection=local
            [openstack_nodes]
            localhost log_destination=/var/log/weirdo
            EOF

            tox -e ansible-playbook -- -vv -b -i hosts playbooks/{project}-{scenario}.yml -e openstack_release={openstack_release} -e version=$version
            status=$?

            # Generate ARA but don't let it fail the job if for some reason it doesn't work
            sudo .tox/ansible-playbook/bin/ara generate /var/log/weirdo/ara || true
            popd

            mkdir artifacts
            sudo cp -a /var/log/weirdo/* artifacts/
            # Ensure permissions allow artifact uploading
            sudo chown -R "$(id -u).$(id -g)" artifacts
            exit $status

- job:
    name: gate-weirdo-ansible-lint
    defaults: global
    builders:
      - prepare-workspace
      - prepare-weirdo
      - shell: |
          set +e
          cd weirdo
          tox -e ansible-lint
    triggers:
      - zuul
    node: bare-centos-7

- job:
    name: gate-weirdo-docs
    defaults: global
    builders:
      - prepare-workspace
      - prepare-weirdo
      - shell: |
          set +e
          cd weirdo
          tox -e docs
    triggers:
      - zuul
    node: bare-centos-7

- job-template:
    name: 'gate-weirdo-integration-{openstack_release}-{project}-{scenario}'
    defaults: global
    builders:
        - prepare-workspace
        - prepare-weirdo
        - weirdo-ansible-playbook-builder:
            openstack_release: '{openstack_release}'
            project: '{project}'
            scenario: '{scenario}'
    publishers:
        - zuul-swift-upload
    triggers:
        - zuul
    node: bare-centos-7

# Kolla implementation has not yet been fixed
# - project:
#     name: gate-weirdo-kolla
#     project: kolla
#     openstack_release:
#       - master
#       - mitaka
#     scenario:
#       - build-centos-binary
#       - deploy-centos-binary
#     jobs:
#       - 'gate-weirdo-integration-{openstack_release}-{kolla}-{scenario}'

- project:
    name: gate-weirdo-packstack
    project: packstack
    openstack_release:
      # - master
      - mitaka
    scenario:
      - scenario001
      # - scenario002
      # - scenario003
    jobs:
      - 'gate-weirdo-integration-{openstack_release}-{project}-{scenario}'

- project:
    name: gate-weirdo-puppet
    project: puppet
    openstack_release:
      # - master
      - mitaka
    scenario:
      - scenario001
      # - scenario002
      # - scenario003
    jobs:
      - 'gate-weirdo-integration-{openstack_release}-{project}-{scenario}'
