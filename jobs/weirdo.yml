- builder:
    name: weirdo-prepare
    builders:
      - shell: |
          CLONEMAP=$(mktemp)
          function cleanup {
              rm -f $CLONEMAP
          }
          trap cleanup EXIT
          cat > $CLONEMAP << EOF
          clonemap:
            - name: 'rdo-infra/weirdo'
              dest: 'weirdo'
            - name: 'rdo-infra/ansible-role-weirdo-(.*)'
              dest: 'weirdo/playbooks/roles/\1'
          EOF

          # Zuul clone WeIRDO and it's roles at their expected location
          zuul-cloner -m $CLONEMAP \
            https://review.rdoproject.org/r \
            rdo-infra/weirdo \
            rdo-infra/ansible-role-weirdo-common \
            rdo-infra/ansible-role-weirdo-logs \
            rdo-infra/ansible-role-weirdo-kolla \
            rdo-infra/ansible-role-weirdo-packstack \
            rdo-infra/ansible-role-weirdo-puppet-openstack

- builder:
    name: weirdo-ansible-playbook
    builders:
        - shell: |
            # WeIRDO uses ARA for ansible-playbook run visualization
            export ARA_DATABASE="sqlite:///$WORKSPACE/ara-$JOB_NAME.sqlite"

            # if file not_required in working dir exits this job is skipped
            if [ -f not_required ];then
                echo "INFO: job is not required"
                exit 0
            fi

            # Backwards compat for project and openstack_release
            # (dmsimard) TODO: Clean this up ASAP
            if [[ "{project}" == "puppet" ]]; then
                project="puppet-openstack"
            else
                project="{project}"
            fi

            if [[ "{openstack_release}" != "master" ]]; then
                version="stable/{openstack_release}"
            else
                version="{openstack_release}"
            fi

            delorean_deps_url="https://trunk.rdoproject.org/centos7-{openstack_release}/delorean-deps.repo"
            if [[ "{experimental}" == "true" ]]; then
                delorean_url="https://trunk.rdoproject.org/centos7-{openstack_release}/current/delorean.repo"
            else
                delorean_url="https://trunk.rdoproject.org/centos7-{openstack_release}/current-passed-ci/delorean.repo"
            fi

            if [[ "{stable}" == "true" ]]; then
                stable_repositories=https://rdoproject.org/repos/openstack-{openstack_release}/rdo-release-{openstack_release}.rpm
            else
                stable_repositories="false"
            fi

            cd weirdo
            # Prepare Ansible inventory to use localhost
            cat <<EOF >hosts
            localhost ansible_connection=local
            [openstack_nodes]
            localhost log_destination=/var/log/weirdo
            EOF

            tox -e ansible-playbook -- -vv -b -i hosts playbooks/$project-{scenario}.yml \
                -e version=$version \
                -e openstack_release={openstack_release} \
                -e delorean_url=$delorean_url \
                -e delorean_deps_url=$delorean_deps_url \
                -e stable_repositories=$stable_repositories \
                -e testing_repository={testing_repository}

- builder:
    name: weirdo-collect-logs
    builders:
      - shell: |
            # WeIRDO uses ARA for ansible-playbook run visualization
            export ARA_DATABASE="sqlite:///$WORKSPACE/ara-$JOB_NAME.sqlite"

            # Generate ARA playbook analysis (don't fail job if generation fails)
            sudo -E weirdo/.tox/ansible-playbook/bin/ara generate html /var/log/weirdo/ara || true

            mkdir artifacts
            sudo cp -a /var/log/weirdo/* artifacts/
            # Ensure permissions allow artifact uploading
            sudo chown -R "$(id -u).$(id -g)" artifacts

- publisher:
    name: weirdo-publish-logs
    publishers:
      - postbuildscript:
          builders:
            - weirdo-collect-logs
            - zuul-swift-upload
          script-only-if-succeeded: False
          script-only-if-failed: False

- job:
    name: gate-weirdo-ansible-lint
    defaults: global
    builders:
      - prepare-workspace
      - weirdo-prepare
      - shell: |
          set +e
          cd weirdo
          tox -e ansible-lint
    triggers:
      - zuul
    node: bare-centos-7

- job:
    name: gate-weirdo-docs
    defaults: global
    builders:
      - prepare-workspace
      - weirdo-prepare
      - shell: |
          set +e
          cd weirdo
          tox -e docs
    triggers:
      - zuul
    node: bare-centos-7

# WeIRDO's own gate jobs
- job-template:
    name: 'gate-weirdo-integration-{openstack_release}-{project}-{scenario}'
    defaults: global
    builders:
        - prepare-workspace
        - weirdo-prepare
        - weirdo-ansible-playbook:
            openstack_release: '{openstack_release}'
            project: '{project}'
            scenario: '{scenario}'
            experimental: 'false'
            stable: 'false'
            testing_repository: 'false'
    publishers:
        - weirdo-publish-logs
    triggers:
        - zuul
    node: rdo-weirdo-centos-7

# To use WeIRDO jobs to test a DLRN repository (i.e, distgit reviews)
- job-template:
    name: 'gate-weirdo-dlrn-{openstack_release}-{project}-{scenario}'
    defaults: global
    builders:
        - prepare-workspace
        - dlrn-gate-repository
        - weirdo-prepare
        - weirdo-ansible-playbook:
            openstack_release: '{openstack_release}'
            project: '{project}'
            scenario: '{scenario}'
            experimental: 'false'
            stable: 'false'
            testing_repository: 'false'
    publishers:
        - weirdo-publish-logs
    triggers:
        - zuul
    node: rdo-weirdo-centos-7

- job-template:
    name: 'experimental-weirdo-dlrn-{openstack_release}-{project}-{scenario}'
    defaults: global
    builders:
        - prepare-workspace
        - dlrn-gate-repository
        - weirdo-prepare
        - weirdo-ansible-playbook:
            openstack_release: '{openstack_release}'
            project: '{project}'
            scenario: '{scenario}'
            experimental: 'true'
            stable: 'false'
            testing_repository: 'false'
    publishers:
        - weirdo-publish-logs
    triggers:
        - zuul
    node: rdo-weirdo-centos-7

- job-template:
    name: 'buildsys-weirdo-release-{openstack_release}-{project}-{scenario}'
    defaults: global
    builders:
        - prepare-workspace
        - buildsys-tags-gate-repository:
            openstack_release: '{openstack_release}'
            buildsys_phase: 'release'
        - weirdo-prepare
        - weirdo-ansible-playbook:
            openstack_release: '{openstack_release}'
            project: '{project}'
            scenario: '{scenario}'
            experimental: 'false'
            stable: 'true'
            testing_repository: 'false'
    publishers:
        - weirdo-publish-logs
    triggers:
        - zuul
    node: rdo-weirdo-centos-7

- job-template:
    name: 'buildsys-weirdo-testing-{openstack_release}-{project}-{scenario}'
    defaults: global
    builders:
        - prepare-workspace
        - buildsys-tags-gate-repository:
            openstack_release: '{openstack_release}'
            buildsys_phase: 'testing'
        - weirdo-prepare
        - weirdo-ansible-playbook:
            openstack_release: '{openstack_release}'
            project: '{project}'
            scenario: '{scenario}'
            experimental: 'false'
            stable: 'true'
            testing_repository: 'true'
    publishers:
        - weirdo-publish-logs
    triggers:
        - zuul
    node: rdo-weirdo-centos-7


- project:
    name: gate-weirdo-packstack
    project: packstack
    openstack_release:
      - master
      - ocata
      - newton
    scenario:
      - scenario001
      - scenario002
      - scenario003
    jobs:
      - 'gate-weirdo-integration-{openstack_release}-{project}-{scenario}'
      - 'gate-weirdo-dlrn-{openstack_release}-{project}-{scenario}'
      - 'experimental-weirdo-dlrn-{openstack_release}-{project}-{scenario}'

- project:
    name: gate-weirdo-puppet
    project: puppet
    openstack_release:
      - master
      - ocata
      - newton
    scenario:
      - scenario001
      - scenario002
      - scenario003
      - scenario004
    jobs:
      - 'gate-weirdo-integration-{openstack_release}-{project}-{scenario}'
      - 'gate-weirdo-dlrn-{openstack_release}-{project}-{scenario}'
      - 'experimental-weirdo-dlrn-{openstack_release}-{project}-{scenario}'

- project:
    name: gate-buildsys-tags
    project:
      - puppet
      - packstack
    openstack_release:
      - master
      - ocata
      - newton
    scenario:
      - scenario001
      - scenario002
      - scenario003
    jobs:
      - 'buildsys-weirdo-release-{openstack_release}-{project}-{scenario}'
      - 'buildsys-weirdo-testing-{openstack_release}-{project}-{scenario}'
