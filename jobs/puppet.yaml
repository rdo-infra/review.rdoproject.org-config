- builder:
    name: puppet-prepare-node
    builders:
      - shell: |
          if [ -f /usr/bin/yum ]; then
            sudo yum -y remove facter puppet rdo-release
            sudo yum -y install libxml2-devel libxslt-devel ruby-devel rsync
            sudo yum -y groupinstall "Development Tools"
          else
            echo 'hum not yum?'
            exit 1
          fi

- builder:
    name: puppet-install
    builders:
      - shell: |
          wget https://git.openstack.org/cgit/openstack-infra/system-config/plain/install_puppet.sh
          sudo bash -xe install_puppet.sh

- job:
    name: 'puppet-lint'
    defaults: global
    builders:
      - prepare-workspace
      - puppet-prepare-node
      - shell: |
          cd $ZUUL_PROJECT
          if [ -f Modulefile -o -f metadata.json ]; then
            if [ -f Modulefile ]; then
              MODULE=$(awk '/^name/ {print $NF}' Modulefile |tr -d \"\')
            elif [ -f metadata.json ]; then
              MODULE=$(python -c 'import json;print json.load(open("metadata.json"))["name"]')
            fi
            if [ -z "$MODULE" ]; then
              echo "Module name not defined in Modulefile or metadata.json"
            else
              mkdir -p "$MODULE"
              rsync -a --exclude="$MODULE" --exclude ".*" . "$MODULE"
              cd "$MODULE"
            fi
          fi
          if [ -f Gemfile ]; then
            mkdir .bundled_gems
            export GEM_HOME=`pwd`/.bundled_gems
            gem install bundler --no-rdoc --no-ri --verbose
            $GEM_HOME/bin/bundle install --without system_tests
            $GEM_HOME/bin/bundle exec rake lint 2>&1
          else
            rake lint 2>&1
          fi
    triggers:
      - zuul
    node: bare-centos-7

- job:
    name: 'puppet-syntax'
    defaults: global
    builders:
      - prepare-workspace
      - puppet-prepare-node
      - puppet-install
      - shell: |
          cd $ZUUL_PROJECT
          find . -iname *.pp | xargs puppet parser validate --modulepath=`pwd`/modules
          for f in `find . -iname *.erb` ; do
            erb -x -T '-' $f | ruby -c
          done
    triggers:
      - zuul
    node: bare-centos-7

- job:
    name: 'puppet-spec'
    defaults: global
    builders:
      - prepare-workspace
      - puppet-prepare-node
      - shell: |
          cd $ZUUL_PROJECT
          export PUPPET_GEM_VERSION='~> 3.8.0'
          mkdir .bundled_gems
          export GEM_HOME=`pwd`/.bundled_gems
          gem install bundler --no-rdoc --no-ri --verbose
          $GEM_HOME/bin/bundle install --retry 3
          $GEM_HOME/bin/bundle exec rake spec SPEC_OPTS='--format documentation'
    triggers:
      - zuul
    node: bare-centos-7

- job:
    name: 'puppet-openstack-integration-scenario001'
    node: rdo-centos7-liberty
    defaults: global

    builders:
      - prepare-workspace
      - puppet-prepare-node
      - shell: |
          #!/bin/bash -xe
          export SCENARIO=scenario001
          export MANAGE_PUPPET_MODULES=false
          export PUPPET_ARGS="--modulepath=/usr/share/openstack-puppet/modules"
          #export MANAGE_REPOS=false
          #export PUPPET_GEM_VERSION='~> 3.8.0'
          
          sudo yum install -y epel-release
          sudo yum install -y puppet
          sudo pip uninstall -y pycrypto # Interferes with python2-crypto RPM
          export PUPPET_GEM_VERSION="~> $(yum -q info puppet|grep ^Version|awk '{ print $3 }')"

          # Grab puppetfile from integration to get versions for external modules
          wget https://raw.githubusercontent.com/openstack/puppet-openstack-integration/${ZUUL_BRANCH}/Puppetfile

          sudo mkdir -p /usr/share/openstack-puppet/modules
          pushd /usr/share/openstack-puppet/modules
              # TODO: Replace this with packages
              for project in aodh apache cassandra ceilometer ceph certmonger cinder collectd concat contrail corosync datacat elasticsearch firewall fluentd glance gnocchi haproxy heat horizon inifile ironic java kafka keystone kibana3 kmod manila memcached midonet mistral module-data keepalived mongodb mysql n1k-vsm neutron nova nssdb ntp opendaylight openstack_extras openstacklib pacemaker qpid rabbitmq redis rsync sensu snmp ssh staging stdlib swift sysctl tempest timezone tomcat tripleo trove tuskar uchiwa vcsrepo vlan vswitch zaqar zookeeper; do
                  if [ -e $(which zuul-cloner) ]; then
                      sudo zuul-cloner http://review.rdoproject.org/r/puppet puppet-${project}
                  else
                      sudo git clone http://review.rdoproject.org/r/puppet/puppet-${project}
                  fi

                  pushd puppet-${project}
                  REF=$(grep -A1 ":git.*${project}" ${WORKSPACE}/Puppetfile | tail -1)
                  if [[ "${REF}" =~ ":branch" ]]; then
                      REF=$(git tag -l | grep "$(echo $REF | sed 's/x/.*/' | cut -f2 --delimiter=\')"|sort -n|tail -1)
                  else
                      REF=$(echo $REF | cut -f2 --delimiter=\')
                  fi
                  # Extra debug, 'just in case'
                  if [ "${REF}z" == "z" ]; then
                    echo "Couldn't find git ref for project: ${project}"
                    echo "Puppetfile:"
                    grep -A1 ":git.*${project}" ${WORKSPACE}/Puppetfile
                    echo "Tags:"
                    sudo git tag -l
                    echo "Branchs:"
                    sudo git branch -a
                  fi
                  sudo git checkout $REF ||Â {
                    echo "Couldn't find git ref for project: ${project} $REF"
                    echo "Puppetfile:"
                    grep -A1 ":git.*${project}" ${WORKSPACE}/Puppetfile
                    echo "Tags:"
                    sudo git tag -l
                    echo "Branchs:"
                    sudo git branch -a
                    exit -1
                  }
                  popd
              done

              # rename the projects from 'puppet-project' to simply 'project'
              for i in puppet-*; do
                  sudo mv $i ${i/puppet-/}
              done

              # Delete the project being tested
              sudo rm -rf ${ZUUL_PROJECT/puppet\/puppet-/}
          popd

          # Copy the new project in
          sudo cp -rv ${ZUUL_PROJECT} /usr/share/openstack-puppet/modules/${ZUUL_PROJECT/puppet\/puppet-/}

          mkdir .bundled_gems
          export GEM_HOME=`pwd`/.bundled_gems

          git clone https://git.openstack.org/openstack/puppet-openstack-integration -b ${ZUUL_BRANCH}

          # Set up the openstack-puppet-modules directory
          sudo cp -rv puppet-openstack-integration /usr/share/openstack-puppet/modules/openstack_integration

          cd puppet-openstack-integration
          gem install bundler --no-rdoc --no-ri --verbose
          $GEM_HOME/bin/bundle install --retry 3

          # Remove installation of puppetlabs puppet repository
          sed -i '/    $SUDO rpm -ivh \/tmp\/puppet.rpm/d' run_tests.sh

          ./run_tests.sh
