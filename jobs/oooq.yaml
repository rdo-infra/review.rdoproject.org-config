- builder:
    name: 'setup_ssh'
    defaults: global
    builders:
      - shell: |
          # The default nodepool image leaves a public key where our nodepool
          # keys go. If this pubkey file is left, it will be used for
          # generating fingerprints, resulting in non-working SSH key exchange.
          rm -f /home/jenkins/.ssh/id_rsa*
          cp /etc/nodepool/id_rsa* ${HOME}/.ssh/
          chmod 0600 ${HOME}/.ssh/id_rsa
          chmod 0644 ${HOME}/.ssh/id_rsa.pub

          # Install the key for root
          cat ${HOME}/.ssh/id_rsa.pub | sudo tee -a /root/.ssh/authorized_keys

          # The SSH config needs to be set up to ignore HostKeys
          cat << EOF | tee ${HOME}/.ssh/config
          Host *
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
          EOF
          chmod 0600 ${HOME}/.ssh/config

- builder:
    name: 'oooq_dlrn_build_packages'
    defaults: global
    builders:
      - shell: |
          # This builder should build DLRN packages and install the repo
          # on this and all sub_nodes
          # tripleo-gate needs to cloned into a roles/ directory

          # Install some requirements for DLRN
          sudo yum install -y python-virtualenv gcc
          virtualenv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install ansible

          mkdir roles
          git clone https://github.com/redhat-openstack/ansible-role-tripleo-gate roles/tripleo-gate

          # Create config files for ansible
          cat << EOF > hosts
            localhost ansible_connection=local
          EOF

          cat << EOF > build-packages.yaml
          ---
          - name: Build custom RPMs
            hosts: localhost
            roles:
              - { role: tripleo-gate, artg_compressed_gating_repo: '${WORKSPACE}/repo.tar.gz' }
          EOF

          # For now we need some test change of an upstream project to make
          # this playbook work correctly.
          # TODO: Delete these, replace with actual changes.
          export GERRIT_PATCHSET_REVISION=2d54e4652e5fbf38d02db38929ed8498c54056f6
          export GERRIT_HOST=review.openstack.org
          export GERRIT_BRANCH=master
          export GERRIT_CHANGE_ID=382857

          # Finally tell ansible to run the playbook to create scripts
          ansible-playbook -i hosts -vvvv build-packages.yaml

          # Untar and create the repo on localhost
          tar zxvf repo.tar.gz
          cat << EOF | sudo tee /etc/yum.repos.d/testing.repo
          [testing]
          name=Repo for testing change
          baseurl=file://${WORKSPACE}/gating_repo
          priority=15
          gpgcheck=0
          EOF

          while read sub; do
            ssh ${sub} mkdir -p ${WORKSPACE}
            scp -r ${WORKSPACE}/gating_repo ${sub}:${WORKSPACE}/
            scp /etc/yum.repos.d/testing.repo ${sub}:testing.repo
            ssh ${sub} "sudo chown root:root testing.repo; sudo mv testing.repo /etc/yum.repos.d/"
          done < /etc/nodepool/sub_nodes_private

- builder:
    name: 'setup_multinode'
    defaults: global
    builders:
      - shell: |
          # repos need to be installed on each subnode
          while read sub; do
            ssh ${sub} mkdir -p ${WORKSPACE}/tripleo
            ssh ${sub} ln -sf ${WORKSPACE}/tripleo ${WORKSPACE}/tripleo/new
            ssh ${sub} git clone https://git.openstack.org/openstack-infra/tripleo-ci ${WORKSPACE}/tripleo/tripleo-ci
            ssh ${sub} git clone https://git.openstack.org/openstack-dev/devstack ${WORKSPACE}/tripleo/devstack
            ssh ${sub} git clone https://git.openstack.org/openstack-infra/devstack-gate ${WORKSPACE}/tripleo/devstack-gate
          done < /etc/nodepool/sub_nodes_private

          # Create tripleo root directory that tripleo.sh expects
          mkdir ${WORKSPACE}/tripleo
          export TRIPLEO_ROOT=${WORKSPACE}/tripleo

          # Create a 'new' symlink for devstack to use
          export BASE=${WORKSPACE}/tripleo
          ln -sf ${WORKSPACE}/tripleo ${WORKSPACE}/tripleo/new

          git clone https://git.openstack.org/openstack-infra/tripleo-ci
          cd tripleo-ci
          ./scripts/tripleo.sh --repo-setup
          ./scripts/tripleo.sh --multinode-setup

- builder:
    name: create_multinode_inventory
    builders:
      - shell: |
          mkdir -p ${HOME}/.quickstart/
          INVENTORY_FILE=${INVENTORY_FILE:-${HOME}/.quickstart/hosts}
          cat <<EOF > ${INVENTORY_FILE}
          127.0.0.2

          [virthost]
          127.0.0.2

          [undercloud]
          127.0.0.2

          [overcloud]
          EOF

          # TODO: replace sub_nodes with their vxlan addresses
          # The /etc/nodepool/sub_nodes_private file contains a list of IPs that
          # have been allocated as additional nodes by nodepool for this job
          # run. These nodes have been set up according to the ready-script
          # listed in the node definition used for the job.
          while read sub; do
            echo ${sub} >> ${INVENTORY_FILE}
          done < /etc/nodepool/sub_nodes_private

          echo '==== Multinode Inventory ===='
          cat ${INVENTORY_FILE}

- builder:
    name: oooq-copy-logs
    builders:
      - shell: |
          cd ${WORKSPACE}
          mkdir -p artifacts/system_logs
          sudo cp -a /home/stack/* artifacts/
          ps aufxww > artifacts/ps.txt
          free -m > artifacts/system_logs/free.txt
          sudo chown -R ${USER} artifacts/

- publisher:
    name: oooq-copy-logs
    publishers:
      - postbuildscript:
          builders:
            - oooq-copy-logs
          script-only-if-succeeded: False
          script-only-if-failed: False

- job:
    name: 'tripleo-quickstart-deploy'
    defaults: global
    scm:
      - git:
          url: https://git.openstack.org/openstack/tripleo-common
      - git:
          url: https://git.openstack.org/openstack/tripleo-quickstart

    builders:
      - setup_ssh
      - oooq_dlrn_build_packages
      - setup_multinode
      - create_multinode_inventory
      - shell: |
          # Temporary while we don't have a quickstart project in review.rdoproject.org
          # Remove when we do.
          cd ${WORKSPACE}
          git clone https://git.openstack.org/openstack/tripleo-quickstart

          cd ${WORKSPACE}/tripleo-quickstart
          ./quickstart.sh --install-deps

          ssh root@127.0.0.2 -vvv whoami
          echo "ssh_args='-vvvv'" >> ansible.cfg

          QUICKSTART_ARGS="--no-clone \
                           --retain-inventory \
                           -t provision,undercloud-scripts,undercloud-install,overcloud-scripts \
                           -T none \
                           -v \
                           -e undercloud_local_interface=br-ex \
                           -p quickstart-extras.yml \
                           -r quickstart-extras-requirements.txt"

          # The Virthost argument uses 127.0.0.2 to run the playbook against
          # localhost, but avoid Ansible's 'local' connection type
          ./quickstart.sh ${QUICKSTART_ARGS} 127.0.0.2

          # Finish the installation
          #ssh -F ${HOME}/.quickstart/ssh.config.local.ansible undercloud ./undercloud-install.sh
          # TODO: Modify this to use the multinode heat templates in newton-forward
          #ssh -F ${HOME}/.quickstart/ssh.config.local.ansible undercloud ./overcloud-deploy.sh
          #ssh -F ${HOME}/.quickstart/ssh.config.local.ansible undercloud ./overcloud-deploy-post.sh
          #ssh -F ${HOME}/.quickstart/ssh.config.local.ansible undercloud ./overcloud-validate.sh

    triggers:
      - zuul
    node: bare-centos-7-2-node
    publishers:
      - oooq-copy-logs
      - zuul-swift-upload
