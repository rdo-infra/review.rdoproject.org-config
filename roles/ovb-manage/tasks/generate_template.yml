---
- name: Copy environment files from OVB repo
  command: cp "{{ item.0 }}" "{{ item.1 }}"
  loop:
    - - "{{ ovb_repo_directory }}/environments/base.yaml"
      - "{{ ovb_working_dir }}/env-{{ idnum }}-base.yaml"
    - - "{{ ovb_repo_directory }}/environments/base-role.yaml"
      - "{{ ovb_working_dir }}/env-{{ idnum }}-compute.yaml"
    - - "{{ ovb_repo_directory }}/environments/base-extra-node.yaml"
      - "{{ ovb_working_dir }}/env-{{ idnum }}-extra.yaml"
  changed_when: true

- name: Customize the base template
  replace:
    path: "{{ ovb_working_dir }}/env-{{ idnum }}-base.yaml"
    regexp: "{{ item.0 }}"
    replace: "{{ item.1 }}"
  loop:
    - - 'provision_net: .*'
      - 'provision_net: ctlplane'
    - - 'baremetal_image:.*'
      - 'baremetal_image: {{ baremetal_image_name|default("ipxe-boot") }}'
    - - 'bmc_image:.*'
      - 'bmc_image: {{ bmc_template_name|default("bmc-template") }}'
    - - 'key_name:.*'
      - 'key_name: {{ key_name }}'
    - - 'node_count:.*'
      - 'node_count: {{ node_count }}'
    - - 'public_net_allocation_pools:.*'
      - 'public_net_allocation_pools: {{ public_net_allocation_pools }}'
  when: not nodes == "routed_networks"

- name: Customize the base template for known clouds
  replace:
    path: "{{ ovb_working_dir }}/env-{{ idnum }}-base.yaml"
    regexp: "{{ item.0 }}"
    replace: "{{ item.1 }}"
  loop:
    - - 'provision_net_shared:.*'
      - 'provision_net_shared: false'
    - - 'public_net_shared:.*'
      - 'public_net_shared: false'
    - - 'bmc_flavor:.*'
      - "bmc_flavor: {{ cloud_settings[cloud_name]['bmc_flavor'] }}"
    - - 'baremetal_flavor:.*'
      - "baremetal_flavor: {{ cloud_settings[cloud_name]['baremetal_flavor'] }}"
    - - 'undercloud_flavor:.*'
      - "undercloud_flavor: {{ cloud_settings[cloud_name]['undercloud_flavor'] }}"
    - - 'undercloud_image:.*'
      - "undercloud_image: {{ cloud_settings[cloud_name]['baremetal_image'] }}"
  when:
    - cloud_name is defined
    - cloud_name in cloud_settings
    - not nodes == "routed_networks"

- block:
    - name: Customize the extra node template
      replace:
        path: "{{ ovb_working_dir }}/env-{{ idnum }}-extra.yaml"
        regexp: "{{ item.0 }}"
        replace: "{{ item.1 }}"
      loop:
        - - 'key_name:.*'
          - 'key_name: {{ extra_node_key_name }}-{{ idnum }}'
        - - 'node_count:.*'
          - 'node_count: {{ extra_node }}'
        - - '../templates/baremetal-ports-extra-node-port-security.yaml'
          - 'templates/baremetal-ports-extra-node-port-security-all.yaml'

    - name: Customize the extra template for known clouds
      replace:
        path: "{{ ovb_working_dir }}/env-{{ idnum }}-extra.yaml"
        regexp: "{{ item.0 }}"
        replace: "{{ item.1 }}"
      loop:
        - - 'baremetal_flavor:.*'
          - "baremetal_flavor: {{ cloud_settings[cloud_name]['extra_node_flavor'] }}"
        - - 'baremetal_image:.*'
          - "baremetal_image: {{ cloud_settings[cloud_name]['baremetal_image'] }}"
      when:
        - cloud_name is defined
        - cloud_name in cloud_settings

    - name: Set extra node args
      set_fact:
        extra_node_args: '--role {{ ovb_working_dir }}/env-{{ idnum }}-extra.yaml'

  when: extra_node|bool

- block:
    - name: Write routed networks base env
      copy:
        dest: "{{ ovb_working_dir }}/env-{{ idnum }}-base.yaml"
        content: |
          resource_registry:
            OS::OVB::UndercloudNetworks: {{ ovb_repo_directory }}/templates/undercloud-networks-routed.yaml
            {% if net_iso in ['multi-nic', 'public-bond'] -%}
            OS::OVB::BaremetalNetworks: {{ ovb_repo_directory }}/templates/baremetal-networks-routed.yaml
            {% else -%}
            OS::OVB::BaremetalNetworks: {{ ovb_repo_directory }}/templates/baremetal-networks-none.yaml
            {% endif -%}
            {% if ipv6|bool -%}
            OS::OVB::DHCPRelay: {{ ovb_repo_directory }}/templates/dhcpv6-relay.yaml
            OS::OVB::ProvisionNetRouter: OS::Heat::None
            OS::OVB::ProvisionNetRouterInterface: OS::Heat::None
            {% else -%}
            OS::OVB::DHCPRelay: {{ ovb_repo_directory }}/templates/dhcpv-relay.yaml
            {% endif -%}
            OS::OVB::BMC: {{ ovb_repo_directory }}/templates/bmc-none.yaml
          parameter_defaults:
            node_count: {{ nodes_config[nodes] }}
            provision_net_shared: false
            public_net_shared: false
            provision_net: ctlplane
            provision_net2: ctlplane-leaf1
            provision_net3: ctlplane-leaf2
            external_net: provider
            private_net: private
            baremetal_prefix: baremetal
            bmc_prefix: bmc
            bmc_image: {{ bmc_template_name|default("bmc-template") }}
            {% if cloud_settings is defined and  cloud_name in cloud_settings -%}
            bmc_flavor: {{ cloud_settings[cloud_name]['bmc_flavor'] }}
            baremetal_flavor: {{ cloud_settings[cloud_name]['baremetal_flavor'] }}
            baremetal_image: {{ baremetal_image_name|default("ipxe-boot") }}
            undercloud_flavor: {{ cloud_settings[cloud_name]['undercloud_flavor'] }}
            undercloud_image: {{ cloud_settings[cloud_name]['baremetal_image'] }}
            dhcp_relay_image: {{ cloud_settings[cloud_name]['dhcp_relay_image'] }}
            dhcp_relay_flavor: {{ cloud_settings[cloud_name]['dhcp_relay_flavor'] }}
            {% else -%}
            bmc_flavor: m1.small
            baremetal_flavor: baremetal
            undercloud_flavor: m1.xlarge
            undercloud_image: CentOS-7-x86_64-GenericCloud
            dhcp_relay_image: CentOS-7-x86_64-GenericCloud
            dhcp_relay_flavor: m1.small
            {% endif -%}
            dhcrelay_prefix: dhcrelay
            dhcp_relay_provision_address: 192.168.24.253
            dhcp_relay_provision2_address: 192.168.25.253
            dhcp_relay_provision3_address: 192.168.26.253
            public_net_allocation_pools: {{ public_net_allocation_pools }}

  when: nodes == "routed_networks"

- block:
    - name: Write routed networks leaf1 role
      copy:
        dest: "{{ ovb_working_dir }}/env-{{ idnum }}-leaf1.yaml"
        content: |
          resource_registry:
            OS::OVB::BMC: {{ ovb_repo_directory }}/templates/bmc.yaml
          parameter_defaults:
            role: leaf1
            baremetal_prefix: baremetal
            bmc_prefix: bmc
            key_name: {{ key_name }}
            node_count: {{ routed_leaf1_nodes_config[nodes_leaf1] }}
            baremetal_image: {{ baremetal_image_name|default("ipxe-boot") }}
            bmc_use_cache: True
            bmc_image: {{ bmc_template_name|default("bmc-template") }}
            {% if cloud_settings is defined and cloud_name in cloud_settings -%}
            baremetal_flavor: {{ cloud_settings[cloud_name]['baremetal_flavor'] }}
            bmc_flavor: {{ cloud_settings[cloud_name]['bmc_flavor'] }}
            dhcp_relay_image: {{ cloud_settings[cloud_name]['dhcp_relay_image'] }}
            dhcp_relay_flavor: {{ cloud_settings[cloud_name]['dhcp_relay_flavor'] }}
            {% else -%}
            bmc_flavor: m1.small
            baremetal_flavor: baremetal
            dhcp_relay_image: CentOS-7-x86_64-GenericCloud
            dhcp_relay_flavor: m1.small
            {% endif -%}
            provision_net: ctlplane-leaf1
            {% if net_iso in ['multi-nic', 'public-bond'] -%}
            overcloud_internal_net: overcloud_internal
            overcloud_storage_net: overcloud_storage
            overcloud_storage_mgmt_net: overcloud_storage_mgmt
            overcloud_tenant_net: overcloud_tenant
            {% endif %}

    - name: Set leaf1 role args
      set_fact:
        role_leaf1_args: '--role {{ ovb_working_dir }}/env-{{ idnum }}-leaf1.yaml'

  when: nodes == "routed_networks"

- block:
    - name: Write routed networks leaf2 role
      copy:
        dest: "{{ ovb_working_dir }}/env-{{ idnum }}-leaf2.yaml"
        content: |
          resource_registry:
            OS::OVB::BMC: {{ ovb_repo_directory }}/templates/bmc.yaml
          parameter_defaults:
            role: leaf2
            baremetal_prefix: baremetal
            bmc_prefix: bmc
            key_name: {{ key_name }}
            node_count: {{ routed_leaf2_nodes_config[nodes_leaf2] }}
            baremetal_image: {{ baremetal_image_name|default("ipxe-boot") }}
            bmc_use_cache: True
            bmc_image: {{ bmc_template_name|default("bmc-template") }}
            {% if cloud_settings is defined and cloud_name in cloud_settings -%}
            baremetal_flavor: {{ cloud_settings[cloud_name]['baremetal_flavor'] }}
            bmc_flavor: {{ cloud_settings[cloud_name]['bmc_flavor'] }}
            dhcp_relay_image: {{ cloud_settings[cloud_name]['dhcp_relay_image'] }}
            dhcp_relay_flavor: {{ cloud_settings[cloud_name]['dhcp_relay_flavor'] }}
            {% else -%}
            bmc_flavor: m1.small
            baremetal_flavor: baremetal
            dhcp_relay_image: CentOS-7-x86_64-GenericCloud
            dhcp_relay_flavor: m1.small
            {% endif -%}
            provision_net: ctlplane-leaf2
            {% if net_iso in ['multi-nic', 'public-bond'] -%}
            overcloud_internal_net: overcloud_internal2
            overcloud_storage_net: overcloud_storage2
            overcloud_storage_mgmt_net: overcloud_storage_mgmt2
            overcloud_tenant_net: overcloud_tenant2
            {% endif %}

    - name: Set leaf2 role args
      set_fact:
        role_leaf2_args: '--role {{ ovb_working_dir }}/env-{{ idnum }}-leaf2.yaml'

  when: nodes == "routed_networks"

- when:
   - ipv6|bool
   - not nodes == "routed_networks"
  block:
    - name: Write IPv6 environment file
      copy:
        dest: "{{ ovb_working_dir }}/env-{{ idnum }}-ipv6.yaml"
        content: |
          # net_cidrs matching tripleo-heat-templates/network_data.yaml
          parameter_defaults:
            radvd_flavor: {{ cloud_settings[cloud_name]['radvd_flavor'] }}
            radvd_image: {{ cloud_settings[cloud_name]['radvd_image'] }}
            provision_net_ip_version: 6
            provision_net_cidr: fd00:fd00:fd00:1000::/64
            radvd_provision_address: fd00:fd00:fd00:1000::fffe
            IPv6_dhcpv6-statefull: false
            {% if net_iso in ['multi-nic', 'public-bond'] -%}
            public_net_ip_version: 6
            overcloud_internal_net_ip_version: 6
            overcloud_storage_net_ip_version: 6
            overcloud_storage_mgmt_net_ip_version: 6
            overcloud_tenant_net_ip_version: 6
            public_net_cidr: 2001:db8:fd00:1000::/64
            public_net_allocation_pools: [{"start": "2001:db8:fd00:1000:0000:0000:0000:0001", "end": "2001:db8:fd00:1000:0000:0000:0000:0099"}]
            overcloud_internal_net_cidr: fd00:fd00:fd00:2000::/64
            overcloud_storage_net_cidr: fd00:fd00:fd00:3000::/64
            overcloud_storage_mgmt_net_cidr: fd00:fd00:fd00:4000::/64
            overcloud_tenant_net_cidr: fd00:fd00:fd00:5000::/64
            {%- endif -%}
    - name: Set IPv6 arguments
      set_fact:
        ipv6_args: -e {{ ovb_working_dir }}/env-{{ idnum }}-ipv6.yaml -e {{ ovb_repo_directory }}/environments/ipv6-radvd.yaml

- name: Set network isolation
  set_fact:
    net_args: >-
      {%- if net_iso == 'multi-nic' -%} -e {{ ovb_repo_directory }}/environments/all-networks-port-security.yaml
      {%- elif net_iso == 'public-bond' -%} -e {{ ovb_repo_directory }}/environments/all-networks-public-bond-port-security.yaml
      {%- else -%} -e {{ ovb_repo_directory }}/environments/port-security.yaml
      {%- endif -%}
  when: not nodes == "routed_networks"

- name: Set arguments for OVB stack
  set_fact:
    ovb_args: >-
      --name {{ stack_name }} --quintupleo --id {{ idnum }}
      {{ env_args }} {{ undercloud_args }} {{ net_args }}  {{ ipv6_args }}  {{ extra_node_args }}  {{ role_leaf1_args }} {{ role_leaf2_args }}

- name: Print ovb args
  debug:
    msg:
      "OVB args:'{{ ovb_args }}'"
