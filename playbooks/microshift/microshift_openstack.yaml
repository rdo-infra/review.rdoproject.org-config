---
- hosts: controller
  tasks:
    - name: Fail when openshift_pull_sec not provided
      fail:
        msg: "The openshift_pull_secret variable can not be empty!"
      when: crc_secret.openshift_pull_secret == ""

    - name: Clone repos in the job workspace
      include_role:
        name: prepare-workspace

    # Fom sf-infra/roles/extra/microshift
    - name: Set facts
      set_fact:
        openshift_pull_secret: "{{ crc_secret.openshift_pull_secret }}"
      no_log: true

    - name: Setup Microshift
      block:
        - name: Start Microshift deployment
          include_role:
            name: rdo-infra/microshift

        # NOTE: The topolvm requires additional volume and create a lvm
        # on that volume. We don't use that for CI, so just skip it.
        - name: Create script to verify deployment
          copy:
            content: |
              for i in {1..20}; do
                echo "Ensuring that containers are spawned... ${i}"
                count=$(/usr/local/bin/oc get pods --all-namespaces | grep openshift | grep -viE 'topolvm|running' -c)
                if [ "$count" -eq "0" ]; then
                    echo "Microshift is deployed, we can continue..."
                    break
                else
                    echo "The Microshift containers are not ready..."
                    sleep 15
                fi
              done
              echo "Skipping waiting for openshift-storage - topolvm"
            dest: /tmp/pull-images.sh
            mode: "0755"

        - name: Check if all containers are up and ready
          shell: /tmp/pull-images.sh

        - name: Pull Required Images before subscription is removed
          when: pre_pull_images is defined and pre_pull_images
          block:
            - name: Create pull image script
              copy:
                content: >
                  echo "Some images will be downloaded before operator start: {{ pre_pull_images | default([]) | join(' ') }}"

                  for image in {{ pre_pull_images | default([]) | join(" ") }}; do
                      name="zuul-ci-pull-job-$(echo $image | sed 's:.*/::' | cut -f1 -d':')";
                      /usr/local/bin/oc run $name -n "default" --image $image --restart=Never --command tailf /dev/null || echo "The image probably already exists";
                  done

                  all_count=$(kubectl get pods -n default | grep "zuul-ci-pull-job" | wc -l);
                  for i in {1..20}; do
                    echo "Ensuring that containers are spawned... ${i}"
                    count=$(/usr/local/bin/oc get pods -n default | grep "zuul-ci-pull-job" | grep -Ec 'CreateContainerError')
                    if [ "$count" -eq "$all_count" ]; then
                        echo "Images should be available, we can continue..."
                        break
                    else
                        echo "The containers are not ready..."
                        sleep 15
                    fi
                  done

                  /usr/local/bin/oc -n openstack get pods | grep "zuul-ci-pull-job" | awk '{print $1}' | xargs /usr/local/bin/oc -n openstack delete pod
                dest: /tmp/pull-images.sh
                mode: "0755"

            - name: Download required images before subscription is removed
              shell: /tmp/pull-images.sh

      always:
        - name: Remove sensitive data
          include_role:
            name: rdo-infra/microshift
            tasks_from: cleanup.yaml
