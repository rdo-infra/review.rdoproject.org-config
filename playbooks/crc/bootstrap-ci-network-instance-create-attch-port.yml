---
- name: Print the host networking data
  ansible.builtin.debug:
    var: item

- name: Port create debug command
  ansible.builtin.debug:
    msg: >-
      openstack port create
      --network {{ crc_ci_bootstrap_private_net_create_yaml.id }}
      --fixed-ip subnet={{ crc_ci_bootstrap_subnet }},ip-address={{ item.value.ip }}
      {{ item.key }}-{{ hostvars[item.key]['nodepool']['external_id'] }}
      -f yaml

- name: Create the private network parent port
  vars:
    default_net_fixed_ip: "{{ item.value.networks.default.ip }}"
  ansible.builtin.command:
    cmd: >-
      openstack port create
      --network {{ crc_ci_bootstrap_private_net_create_yaml.id }}
      --fixed-ip subnet={{ crc_ci_bootstrap_private_subnet_create_yaml.id }},ip-address={{ default_net_fixed_ip }}
      {{ item.key }}-{{ hostvars[item.key]['nodepool']['external_id'] }}
      -f yaml
  register: crc_ci_bootstrap_instance_parent_port_create_out

- name: Set parent port data as a fact for further usage
  ansible.builtin.set_fact:
    crc_ci_bootstrap_instance_parent_port_create_yaml: "{{ crc_ci_bootstrap_instance_parent_port_create_out.stdout | from_yaml }}"
    cacheable: true

- name: Create VLANs ports and trunk
  vars:
    instance_vlans_config: >-
      {{
        item.value.networks | dict2items | rejectattr('value', 'equalto', 'default')
      }}
    node_name: "{{ item.key }}"
  when: instance_vlans_config | length > 0
  block:
    - name: Create the trunk port
      ansible.builtin.command:
      cmd: >-
        openstack network trunk create
        --parent-port {{ crc_ci_bootstrap_instance_parent_port_create_yaml.id }}
        zuul-ci-trunk-{{ item.key }}-{{ hostvars[item.key]['nodepool']['external_id'] }}
        -f value -c id
      register: crc_ci_bootstrap_instance_trunk_id_out

    - name: Create VLANs ports and attach them to the trunk
      ansible.builtin.include_tasks: bootstrap-ci-network-instance-add-vlan.yml
      loop: "{{ instance_vlans_config }}"
      loop_control:
        label: "{{ item.key }}"

- name: Attach the port to the instance
  ansible.builtin.command:
    cmd: >-
      openstack server add port
      {{ hostvars[item.key]['nodepool']['external_id'] }}
      {{ crc_ci_bootstrap_instance_parent_port_create_yaml.id }}

- name: Create ci dir in etc folder in the node
  become: true
  delegate_to: "{{ item.key }}"
  ansible.builtin.file:
    path: "/etc/ci/env"
    state: directory
    mode: '0755'

- name: Save the MAC address for further usage if needed
  become: true
  delegate_to: "{{ item.key }}"
  ansible.builtin.copy:
    dest: /etc/ci/env/private-mac.yml
    content: |
      crc_ci_bootstrap_private_iface_mac: {{ crc_ci_bootstrap_instance_parent_port_create_yaml.mac_address }}
    owner: root
    group: root
    mode: '0644'

- name: Append the MAC to the MACs dict in the controller
  ansible.builtin.set_fact:
    crc_ci_bootstrap_private_net_macs: >-
      {{
        crc_ci_bootstrap_private_net_macs |
        default({}) |
        combine(
          {
            item.key : crc_ci_bootstrap_instance_parent_port_create_yaml.mac_address
          }
        )
      }}
    cacheable: true
