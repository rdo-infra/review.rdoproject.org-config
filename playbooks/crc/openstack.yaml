---
- name: Install Ansible, Make, Tar
  become: true
  ansible.builtin.package:
    name:
      - ansible-core
      - make
      - tar
    state: latest

- name: Install devsetup dependencies
  community.general.make:
    chdir: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/install_yamls/devsetup"
    target: download_tools

- name: Build operator images
  include_tasks: build_operators.yaml
  when: build_operators | default('false') | bool

# NOTE: To deploy Openstack with k8s operators, it requires to configure
# subscription, that is generated with command: make openstack.
# Later the generated manifest is available in out/openstack/openstack/op/subscription.yaml
# It is important to configure subscription before pull-secret.txt is removed!
- name: Setup required subscription
  shell: |
    # Once again ensure that user is logged in
    /usr/local/bin/oc login -u kubeadmin \
      -p "$(tail ~/crc-start.log  | grep -i password | head -1 | awk '{print $2}')" \
      https://api.crc.testing:6443 \
      --insecure-skip-tls-verify=true

    {% if openstack_img is defined and openstack_img %}
    export OPENSTACK_IMG="{{ openstack_img }}"
    {% endif %}

    make openstack

    for i in {1..20}; do
      echo "Ensuring that subscription is ready... ${i}"
      status=$(/usr/local/bin/oc get -n openstack subscription openstack-operator  -o go-template --template {% raw %}'{{.status.state}}'{% endraw %})
      if ! [[ "$status" =~ ^(Completed|Running|AtLatestKnown)$ ]]; then
          echo "The subscription is not ready..."
          sleep 15
      else
          echo "Subscription is available, we can continue..."
          break
      fi
    done
  args:
    chdir: "{{ zuul.projects['github.com/openstack-k8s-operators/install_yamls'].src_dir }}"

- name: Pull Required Images before subscription is removed
  when: "{{ pull_images | default(true) }}"
  block:
    - name: Clone osp director
      git:
        repo: "https://github.com/openstack-k8s-operators/osp-director-operator/"
        dest: ~/osp-director-operator
        version: "{{ osp_director_operator_version | default('master') }}"

    - name: Create pull image script
      copy:
        content: >
          /usr/local/bin/oc login -u kubeadmin
          -p "$(tail ~/crc-start.log  | grep -i password | head -1 | awk '{print $2}')"
          https://api.crc.testing:6443
          --insecure-skip-tls-verify=true ;

          echo "Some images will be downloaded before operator start: {{ pre_pull_images | default([]) | join(' ') }}"

          for image in {{ pre_pull_images | default([]) | join(" ") }}; do
              name="zuul-ci-pull-job-$(echo $image | sed 's:.*/::' | cut -f1 -d':')";
              /usr/local/bin/oc run $name -n "openstack" --image $image --restart=Never --command tailf /dev/null || echo "The image probably already exists";
          done

          all_count=$(kubectl get pods -n openstack | grep "zuul-ci-pull-job" | wc -l);
          for i in {1..20}; do
            echo "Ensuring that containers are spawned... ${i}"
            count=$(/usr/local/bin/oc get pods -n openstack | grep "zuul-ci-pull-job" | grep -Ec 'CreateContainerError')
            if [ "$count" -eq "$all_count" ]; then
                echo "Images should be available, we can continue..."
                break
            else
                echo "The containers are not ready..."
                sleep 15
            fi
          done

          /usr/local/bin/oc -n openstack get pods | grep "zuul-ci-pull-job" | awk '{print $1}' | xargs /usr/local/bin/oc -n openstack delete pod
        dest: /tmp/pull-images.sh
        mode: "0755"
      when: pre_pull_images is defined and pre_pull_images

    - name: Download required images before subscription is removed
      when: pre_pull_images is defined and pre_pull_images
      shell: /tmp/pull-images.sh
