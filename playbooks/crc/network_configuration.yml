---
- name: Debug commands
  ansible.builtin.debug:
    msg: >-
      openstack port create
      --network {{ crc_ci_bootstrap_private_net }}
      --fixed-ip subnet={{ crc_ci_bootstrap_subnet }},ip-address={{ node_ip }}
      {{ item }}-{{ node_id }}
      -c mac_address -f value;
      openstack server add port {{ node_id }} {{ item }}-{{ node_id }}

- name: Created private network port
  ansible.builtin.shell:
    cmd: >-
      openstack port create
      --network {{ crc_ci_bootstrap_private_net }}
      --fixed-ip subnet={{ crc_ci_bootstrap_subnet }},ip-address={{ node_ip }}
      {{ item }}-{{ node_id }}
      -c mac_address -f value;

      sleep 1;

      openstack server add port {{ node_id }} {{ item }}-{{ node_id }}
  register: _port_mac_address

- name: Create ci dir in etc folder in the node
  become: true
  delegate_to: "{{ item }}"
  ansible.builtin.file:
    path: "/etc/ci/env"
    state: directory
    mode: '0755'

- name: Save the MAC address for further usage if needed
  become: true
  delegate_to: "{{ item }}"
  ansible.builtin.copy:
    dest: /etc/ci/env/private-mac.yml
    content: |
      crc_ci_bootstrap_private_iface_mac: {{ _port_mac_address.stdout }}
    owner: root
    group: root
    mode: '0644'

- name: Append the MAC to the MACs dict in the controller
  ansible.builtin.set_fact:
    crc_ci_bootstrap_private_net_macs: >-
      {{
        crc_ci_bootstrap_private_net_macs |
        default({}) |
        combine(
          {
            item : _port_mac_address.stdout
          }
        )
      }}
    cacheable: true

- name: Create NetworkManager configuration file
  become: true
  delegate_to: "{{ item }}"
  vars:
    crc_ci_bootstrap_ipv4_net: "{{ crc_ci_bootstrap_ipv4_range | default('192.168.0.0/24') }}"
    gw_host: "{{ crc_ci_bootstrap_ipv4_net.split('/')[0] | regex_replace('0$', '1') }}"
    net_netmask: "{{ crc_ci_bootstrap_ipv4_net.split('/')[1] }}"
  ansible.builtin.copy:
    content: |
      [connection]
      id=ci-private-network
      uuid={{ 99999999 | random | to_uuid }}
      type=ethernet
      autoconnect=true

      [ethernet]
      mac-address={{ _port_mac_address.stdout | trim | lower }}

      [ipv4]
      method=manual
      addresses={{ node_ip }}/{{ net_netmask }}
      gateway={{ gw_host }}
      {% if crc_ci_bootstrap_ipv4_dns is defined and crc_ci_bootstrap_ipv4_dns != '' -%}
      dns={{ crc_ci_bootstrap_ipv4_dns }}
      {% endif -%}

      [ipv6]
      addr-gen-mode=stable-privacy
      method=disabled

      [proxy]
    dest: /etc/NetworkManager/system-connections/private.nmconnection
    mode: '0600'
    owner: root
    group: root

- name: Disable the defaul route of the public facing iface in computes
  become: true
  delegate_to: "{{ item }}"
  when: inventory_hostname is regex('^compute*')
  community.general.ini_file:
    path: /etc/NetworkManager/system-connections/ens3.nmconnection
    section: "ipv4"
    option: "never-default"
    value: "yes"
    state: present
    mode: '0600'
    owner: root
    group: root

- name: Refresh NetworkManager
  become: true
  delegate_to: "{{ item }}"
  ansible.builtin.systemd:
    name: NetworkManager
    state: restarted
