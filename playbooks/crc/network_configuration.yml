---
- name: Debug commands
  ansible.builtin.debug:
    msg: >-
      openstack port create
      --network {{ crc_ci_bootstrap_private_net }}
      --fixed-ip subnet={{ crc_ci_bootstrap_subnet }},ip-address={{ node_ip }}
      {{ item }}-{{ node_id }}
      -c mac_address -f value;
      openstack server add port {{ node_id }} {{ item }}-{{ node_id }}

- name: Created private network port
  ansible.builtin.shell:
    cmd: >-
      openstack port create
      --network {{ crc_ci_bootstrap_private_net }}
      --fixed-ip subnet={{ crc_ci_bootstrap_subnet }},ip-address={{ node_ip }}
      {{ item }}-{{ node_id }}
      -c mac_address -f value;

      sleep 1;

      openstack server add port {{ node_id }} {{ item }}-{{ node_id }}
  register: _port_mac_address

- name: Display some data about network and subnet
  ansible.builtin.shell:
    cmd: |
      openstack network show {{ crc_ci_bootstrap_private_net }};
      openstack subnet show  {{ crc_ci_bootstrap_subnet }};
      openstack port list --network {{ crc_ci_bootstrap_private_net }}

- name: Create ci dir in etc folder
  become: true
  delegate_to: "{{ item }}"
  ansible.builtin.file:
    path: "/etc/ci"
    state: directory
    mode: '0755'

- name: Save the MAC address for further usage if needed
  become: true
  delegate_to: "{{ item }}"
  ansible.builtin.copy:
    dest: /etc/ci/private-mac.yml
    content: |
      private_iface_mac: {{ _port_mac_address.stdout }}
    owner: root
    group: root
    mode: '0644'

- name: Create NetworkManager configuration file
  become: true
  delegate_to: "{{ item }}"
  vars:
    crc_ci_bootstrap_ipv4_net: "{{ crc_ci_bootstrap_ipv4_range | default('192.168.0.0/24') }}"
    gw_host: "{{ crc_ci_bootstrap_ipv4_net.split('/')[0] | regex_replace('0$', '1') }}"
  ansible.builtin.copy:
    content: |
      [connection]
      id=ci-private-network
      type=ethernet
      autoconnect=true

      [ethernet]
      mac-address={{ _port_mac_address.stdout | trim | lower }}

      [ipv4]
      method=manual
      addresses={{ node_ip }}/32
      gateway={{ gw_host }}
      {% if crc_ci_bootstrap_ipv4_dns is defined and crc_ci_bootstrap_ipv4_dns != '' -%}
      dns={{ crc_ci_bootstrap_ipv4_dns }}
      {% endif -%}

      [ipv6]
      method=disabled

    dest: /etc/NetworkManager/system-connections/private.nmconnection
    mode: '0600'
    owner: root
    group: root

- name: Load the NetworkManager configuration
  become: true
  ansible.builtin.command: >-
    nmcli connection load
    /etc/NetworkManager/system-connections/private.nmconnection

- name: Ensure that the private network connection is up
  become: true
  ansible.builtin.command: >-
    nmcli connection up ci-private-network

- name: Show NetworkManager connections
  become: true
  ansible.builtin.command: nmcli connection show
