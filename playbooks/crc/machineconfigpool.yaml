---
- name: Get missing machineconfigpool config
  ansible.builtin.shell: >
    oc get mcp master -o json |
    jq -r '.status.conditions[] |
    select(.type == "NodeDegraded") | .message' |
    grep -Eo rendered-master-[0-9a-f]{32}
  register: _missing_mcp
  failed_when: _missing_mcp.rc not in [0,1]

- name: Check if file is available
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/machineconfigpool/{{ _missing_mcp.stdout }}.yaml"
  register: _mcp_file

- name: Apply machineconfigpool if available and restart deployments
  when: _mcp_file.stat.exists
  block:
    - name: Apply machineconfigpool
      ansible.builtin.command: |
        oc apply -f {{ ansible_user_dir }}/machineconfigpool/{{ _missing_mcp.stdout }}.yaml

    - name: Restart deployments
      ansible.builtin.shell: |
        oc -n openshift-machine-config-operator rollout restart deployment.apps/{{ item }}
      loop:
        - machine-config-controller
        - machine-config-operator

    - name: Wait for deployments to be ready
      ansible.builtin.shell: >
        oc -n openshift-machine-config-operator
        wait --for=condition=available
        --timeout=600s
        deployment.apps/{{ item }}
      loop:
        - machine-config-controller
        - machine-config-operator

    - name: Get degradedMachineCount for machineconfigpool worker
      ansible.builtin.shell: |
        oc get mcp worker -o json | jq -r '.status.degradedMachineCount'
      register: _worker_status

    - name: Get degradedMachineCount for machineconfigpool master
      ansible.builtin.shell: |
        oc get mcp master -o json | jq -r '.status.degradedMachineCount'
      register: _master_status

    - name: Assert that degradaded machineconfigpool is 0
      ansible.builtin.assert:
        that:
          - " _worker_status.stdout | int  == 0"
          - " _master_status.stdout | int  == 0"

- name: Print current machineconfigpool
  ansible.builtin.command: oc get machineconfigpool
