---
- name: Trigger Nested Virt from GitHub PR
  hosts: primary
  vars:
    gerrit_key_name: "rdoinfo_id_rsa"
    trigger_repository: "tripleo-downstream-trigger-nested-virt"
  tasks:
    - name: Install system dependencies
      ansible.builtin.package:
        name: git
        state: present
      become: true

    - name: Install git-review
      ansible.builtin.pip:
        name: git-review

    - name: Ensure .ssh directory exists
      ansible.builtin.file:
        path: "~/.ssh"
        state: directory
        mode: "0700"

    - name: Install SSH private key from secret
      ansible.builtin.copy:
        content: "{{ rdoinfo_ssh.private_key }}"
        dest: "~/.ssh/{{ gerrit_key_name }}"
        mode: "0600"

    - name: Setup SSH config for Gerrit
      ansible.builtin.shell: |
        set +e -x
        cat >> ~/.ssh/config << EOF
        PubkeyAcceptedKeyTypes +ssh-rsa
        Host review.rdoproject.org
          IdentityFile "~/.ssh/{{ gerrit_key_name }}"
        EOF
        chmod 0400 ~/.ssh/config
        ssh-keyscan -p 29418 review.rdoproject.org >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
      changed_when: true

    - name: Clone the nested-virt trigger repository
      ansible.builtin.git:
        repo: "https://review.rdoproject.org/r/{{ trigger_repository }}"
        dest: "{{ trigger_repository }}"
        version: "master"

    - name: Setup git identity config
      ansible.builtin.shell: |
        set -e +x
        git config user.name "rdo-trunk"
        git config user.email "rhos-role-rdo-admin@redhat.com"
        git config gitreview.username "rdo-trunk"
      changed_when: false
      args:
        chdir: "{{ trigger_repository }}"

    - name: Run git-review setup
      ansible.builtin.command: git review -s -v
      changed_when: true
      args:
        chdir: "{{ trigger_repository }}"

    - name: Generate unique ChangeID for Gerrit
      ansible.builtin.shell: |
        set -o pipefail
        (echo -n "{{ trigger_job_name }} Trigger for "; date "+%s") | git hash-object --stdin
      changed_when: false
      register: _change_id

    - name: Create a trigger file in the repo
      vars:
        _trigger_file: >-
          {% if trigger_branch_name is defined -%}
          {{ trigger_job_name }}_{{ trigger_branch_name }}
          {% else -%}
          {{ trigger_job_name }}
          {% endif -%}
      ansible.builtin.shell: |
        set -e +x
        touch trigger_{{ _trigger_file }}
        git add trigger_{{ _trigger_file }}
      changed_when: true
      args:
        chdir: "{{ trigger_repository }}"

    - name: Parse the trigger origin Pull request
      ansible.builtin.set_fact:
        trigger_origin_pr: "{{ trigger_origin_pr | default([]) + [item.change_url] }}"
        cacheable: true
      with_items: "{{ zuul['buildset_refs'] }}"
      when:
        - zuul is defined
        - "'change_url' in item"

    - name: Create Zuul Change list
      ansible.builtin.set_fact:
        trigger_change_list: "{{ trigger_change_list | default([]) + [item.change_url] }}"
        cacheable: true
      with_items: "{{ zuul['items'] }}"
      when:
        - zuul is defined
        - "'change_url' in item"

    - name: Create a commit for the trigger
      ansible.builtin.command:
        argv:
          - "git"
          - "commit"
          - "-m"
          - "{{ commit_message }}"
      changed_when: true
      vars:
        commit_message: |
          {{ trigger_commit_msg|default('Trigger for GitHub') }} by {{ trigger_origin_pr | first }}

          {% if trigger_change_list | length > 0 %}
          {% for change in trigger_change_list %}
          Depends-On: {{ change }}
          {% endfor %}
          {% endif %}

          Change-Id: I{{ _change_id.stdout }}
      args:
        chdir: "{{ trigger_repository }}"

    - name: Submit the Gerrit review
      ansible.builtin.command: git review
      changed_when: true
      args:
        chdir: "{{ trigger_repository }}"
