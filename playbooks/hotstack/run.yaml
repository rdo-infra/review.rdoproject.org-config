---
- name: Create necessary files to deploy hotstack
  hosts: all
  vars:
    hotstack_work_dir: "{{ zuul.executor.work_root }}/hotstack"
  tasks:
    - name: Assert scenario is defined
      ansible.builtin.assert:
        that:
          - scenario is defined
          - scenario | length > 0

    - name: Load bootstrap vars
      ansible.builtin.include_vars:
        file: "{{ scenario_dir }}/{{ scenario }}/bootstrap_vars.yml"
        name: bootstrap_vars
    
    - name: Set up infrastucture (Heat stack)
      ansible.builtin.include_role:
        name: heat_stack
      vars:
        os_cloud: default
        stack_name: "hs-{{ zuul.build }}"
        stack_template_path: "{{ bootstrap_vars.stack_template_path }}"
        stack_parameters: "{{ heat_stack_parameters }}"

    - name: Load stack output vars from file
      ansible.builtin.include_vars:
        file: "{{ hotstack_work_dir }}/hs-{{ zuul.build }}-outputs.yaml"
        name: stack_outputs

    - name: Load hotstack cloud secret vars from file
      ansible.builtin.include_vars:
        file: "/etc/hotstack/cloud-secrets.yaml"
        name: hotstack_cloud_secrets

    - name: Prepare the controller node
      ansible.builtin.include_role:
        name: controller
      vars:
        controller_ansible_host: "{{ stack_outputs.controller_ansible_host }}"

    - name: Install Openshift
      ansible.builtin.include_role:
        name: ocp_agent_installer
        apply:
          delegate_to: controller-0
      vars:
        install_config: "{{ stack_outputs.ocp_install_config }}"
        agent_config: "{{ stack_outputs.ocp_agent_config }}"
        pull_secret: "{{ crc_secret_pabrodri.openshift_pull_secret | trim | ansible.builtin.b64encode }}"
