- hosts: all
  name: Autoconverted job legacy-rdoinfo-create-project from old job rdoinfo-create-project
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - name: Copy add-project-from-rdoinfo.sh
      copy:
        src: add-project-from-rdoinfo.sh
        dest: '{{ ansible_user_dir }}/add-project-from-rdoinfo.sh'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        mode: 0755

    - name: Copy add-project-from-rdoinfo.py
      copy:
        src: add-project-from-rdoinfo.py
        dest: '{{ ansible_user_dir }}/add-project-from-rdoinfo.py'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        mode: 0755

    - name: Copy add-project-on-sf.py
      copy:
        src: add-project-on-sf.py
        dest: '{{ ansible_user_dir }}/add-project-on-sf.py'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        mode: 0755

    - name: Copy resource.j2 to /tmp
      copy:
        src: resource.j2
        dest: '/tmp/resource.j2'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        mode: 0755

    - name: clone
      shell:
        cmd: |
          set -e -x
          if [[ "${ZUUL_PIPELINE}" == "post" ]]; then
          # Source is review.rdoproject.org
          GIT_URL=https://review.rdoproject.org/r
          elif [[ "${ZUUL_PIPELINE}" == "openstack-post" ]]; then
          # Source is git.openstack.org
          GIT_URL=https://git.openstack.org
          fi
          echo "Clean workspace"
          rm -Rf ./*
          echo "Clone $ZUUL_PROJECT"
          git clone ${GIT_URL}/${ZUUL_PROJECT} ${ZUUL_PROJECT}
          # ZUUL_NEWREV is the variable with the commit to be used
          echo "Checking out $ZUUL_NEWREV"
          pushd $ZUUL_PROJECT
          git checkout $ZUUL_NEWREV
          popd
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
      changed_when: true

    - name: add-project-from-rdoinfo
      shell:
        cmd: |
          set +e -x
          virtualenv --system-site-packages .venv
          . .venv/bin/activate
          pip install git-review rdopkg ruamel.yaml Jinja2
          cd $ZUUL_PROJECT

          TAGS_DIFF=$(rdopkg info-tags-diff .)
          NEW_PROJECTS=""

          while read line; do
            PKGNAME=$(awk '{print $1}' <<< $line)
            if [[ -n $(echo "$line" | grep -w under-review) ]]; then
                NEW_PROJECTS="$NEW_PROJECTS $PKGNAME"
            fi
          done <<< "${TAGS_DIFF}"

          echo "New projects: ${NEW_PROJECTS}"

          for PKG in ${NEW_PROJECTS}; do
            {{ ansible_user_dir }}/add-project-from-rdoinfo.sh $PKG $PWD
          done
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
      changed_when: true
