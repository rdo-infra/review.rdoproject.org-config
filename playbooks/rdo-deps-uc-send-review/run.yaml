- hosts: all
  name: rdo-deps-uc-send-review playbook
  tasks:
    - name: rdo-deps-uc-send-review
      shell:
        cmd: |
          set +e -x
          MASTER_RELEASE="antelope"
          TOPIC="deps-uc-update"

          GATING_SCRIPTS_BASE="{{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/gating_scripts'].src_dir }}"
          source ${GATING_SCRIPTS_BASE}/deps-uc-send-review.common
          virtualenv --system-site-packages .venv
          . .venv/bin/activate
          pip install pymod2pkg sh git-review ruamel.yaml rdopkg koji rpm_vercmp
          # Install releng, needed for add-buildsys-tags.py script
          pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/releng'].src_dir }}
          pip install .
          popd

          mkdir -p ~/.ssh
          cat >> ~/.ssh/config << EOF

          Host review.rdoproject.org
            IdentityFile ~/.ssh/rdoinfo_id_rsa
          EOF

          chmod 600 ~/.ssh/config
          ssh-keyscan -p 29418 review.rdoproject.org >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          git config --global --add user.name "rdo-trunk"
          git config --global --add user.email "amoralej+rdo-trunk@redhat.com"
          git config --global --add gitreview.username "rdo-trunk"

          pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/releng'].src_dir }}
          change_list=$(python scripts/report-uc.py -o master \
                                      --repo-url https://trunk.rdoproject.org/centos9-master/delorean-deps.repo \
                                      --repo-url https://trunk.rdoproject.org/centos9-master/current/delorean.repo \
                                      -s lower | grep -v -e "delorean-component" | sort | cut -d',' -f2-3 | sed "s/,/===/")
          popd

          echo -e "INFO: the change list is: $change_list"

          if [ -z "${change_list//[[:space:]]/}" ]; then
              echo "INFO: there is no module to bump, Exiting"
              exit 0
          fi

          # We apply the change list to the master buildsys-tags testing file,
          # in order to have the accociated NVR list.
          pushd {{ ansible_user_dir }}/{{ zuul.project.src_dir }}
          python ${GATING_SCRIPTS_BASE}/buildsys-tags/add-buildsys-tags.py \
              -l $change_list \
              -r $MASTER_RELEASE \
              --centos-release 9s \
              -p testing \
              --no-update-all-files
          DIFF=$(git diff *.yml */*.yml)
          popd

          if [ -n "$DIFF" ]; then
            NVR=$(echo -e "$DIFF"|grep -P '^\+(?:(?!\+\+))'|grep -e "$MASTER_RELEASE-testing"|cut -d: -f2|rev|cut -d. -f2-|rev)
            branch=c9s-$MASTER_RELEASE-rdo
            pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/gating_scripts'].src_dir }}
            source ${GATING_SCRIPTS_BASE}/rpm-deps-gating-lib.common
            for pkg in $NVR; do
              needs_update=true
              change_url=""
              pkg_name=$(echo $pkg | sed 's/^\(.*\)-\([^-]\{1,\}\)-\([^-]\{1,\}\)$/\1/')
              pkg_vers=$(echo $pkg | sed 's/^\(.*\)-\([^-]\{1,\}\)-\([^-]\{1,\}\)$/\2/')
              pkg_nv=$pkg_name-$pkg_vers

              echo -e "INFO: processing ${pkg_nv}..."

              in_koji_nvr=$(python3 exist_in_koji.py $pkg_name $pkg_vers koji exact)
              if [ $? -eq 0 ]; then
                echo -e "INFO ${pkg_nv}: there is build found in Fedora Koji '$in_koji_nvr'"
              else
                echo -e "INFO ${pkg_nv}: there is NO build found in Fedora Koji"
                echo -e "INFO ${pkg_nv}: moving to next package..."
                continue
              fi

              # We check if the NVR is available in CBS, otherwise we send
              # a patch (if not yet opened).
              in_cbs_nvr=$(python3 exist_in_koji.py $pkg_name $pkg_vers cbs exact)
              if [ $? -eq 0 ]; then
                echo -e "INFO ${pkg_nv}: there is a build found in CBS Koji '$in_cbs_nvr', it will be promoted in next rdoinfo-buildsys-tags-update-testing job execution"
              else
                echo -e "INFO ${pkg_nv}: there is NO build found in CBS Koji"
                echo -e "INFO ${pkg_nv}: we're checking whether a patch is already created or not..."
                is_patch_already $pkg_name $pkg_vers $branch
                if [ $? -eq 0 ]; then
                  echo -e "INFO ${pkg_nv}: there is already an opened patch"
                  echo -e "INFO ${pkg_nv}: moving to next package..."
                  continue 2
                else
                  echo -e "INFO ${pkg_nv}: there is NOT an opened patch"
                  echo -e "INFO ${pkg_nv}: creating patch..."
                  distgit_status=$(setup_distgit $pkg_name $in_koji_nvr $MASTER_RELEASE 9s)
                  if [ $? -eq 0 ]; then
                    pushd workdir/$pkg_name
                    git add .
                    COMMIT_MSG="Update to ${pkg_vers}"
                    git commit -m "$COMMIT_MSG"
                    echo -e "INFO ${pkg_nv}: submitting patch..."
                    git review c9s-${MASTER_RELEASE}-rdo -t $TOPIC
                    popd
                  else
                    echo -e "ERROR ${pkg_nv}: while setting up distgit for $pkg_name"
                    echo -e "$distgit_status"
                  fi
                fi
              fi
            done
          else
            echo "INFO: There is no deps to update, exiting"
            exit 0
          fi
      changed_when: true
