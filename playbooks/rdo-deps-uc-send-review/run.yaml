- hosts: all
  name: rdo-deps-uc-send-review playbook
  tasks:
    - name: Create periodic_job fact
      set_fact:
        periodic_job: "{{ periodic_job|default(false) or 'periodic' in zuul.pipeline }}"

    - name: rdo-deps-uc-send-review
      shell:
        cmd: |
          set +e -x
          source {{ ansible_user_dir }}/functions.sh
          virtualenv --system-site-packages .venv
          . .venv/bin/activate
          pip install pymod2pkg sh git-review ruamel.yaml rdopkg koji rpm_vercmp
          # Install releng, needed for add-buildsys-tags.py script
          pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/releng'].src_dir }}
          pip install .
          popd

          mkdir -p ~/.ssh
          cat >> ~/.ssh/config << EOF

          Host review.rdoproject.org
            IdentityFile ~/.ssh/rdoinfo_id_rsa
          EOF

          chmod 600 ~/.ssh/config
          ssh-keyscan -p 29418 review.rdoproject.org >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          git config --global --add user.name "rdo-trunk"
          git config --global --add user.email "amoralej+rdo-trunk@redhat.com"
          git config --global --add gitreview.username "rdo-trunk"

          BRANCH="{{ zuul.branch }}"
          if [ "$BRANCH" == 'master' ]; then
              RELEASE="zed"
          else
              echo "INFO: we handle master branch only"
              exit 0
          fi

          {% if not periodic_job|default(false) %}
              # If the job is triggered by a change in upstream requirements
              # project, we get the bump changes from the commit.
              pushd {{ ansible_user_dir }}/{{ zuul.project.src_dir }}
              SUBJECT=$(git log --oneline {{ zuul.newrev }}|head -1|cut -d " " -f 2)
              if [ $SUBJECT == "Merge" ]; then
                 REAL_COMMIT=$(git show {{ zuul.newrev }}|grep ^Merge:|awk '{print $(NF)}')
              else
                 REAL_COMMIT={{ zuul.newrev }}
              fi
              change_list=($(git show $REAL_COMMIT upper-constraints.txt|grep -P '^\+(?:(?!\+\+))|^-(?:(?!--))'))
              change_list=${change_list[@]/#[+-]/}
              popd
          {% else %}
              # Else, the job is triggered by a periodic pipeline, we get the
              # modules which are in lower status.
              pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/releng'].src_dir }}
              # TODO(jcapitao): fix WSME corner case and remove the grep
              # command, WSME makes the job fail currently.
              change_list=$(python scripts/report-uc.py -o master \
                                          --repo-url https://trunk.rdoproject.org/centos9-master/delorean-deps.repo \
                                          --repo-url https://trunk.rdoproject.org/centos9-master/current/delorean.repo \
                                          -s lower | sort | cut -d',' -f2-3 | sed "s/,/===/" | grep -v -e "WSME")
              popd
          {% endif %}
          echo -e "INFO: the change list is: $change_list"

          if [ -z "${change_list//[[:space:]]/}" ]; then
              echo "INFO: there is no module to bump, Exiting"
              exit 0
          fi

          # We apply the change list to the master buildsys-tags testing file,
          # in order to have the accociated NVR list.
          GATING_SCRIPTS_BASE="{{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/gating_scripts'].src_dir }}"
          pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdoinfo'].src_dir }}
          python ${GATING_SCRIPTS_BASE}/buildsys-tags/add-buildsys-tags.py \
              -l $change_list \
              -r $RELEASE \
              --centos-release 9s \
              -p testing \
              --no-update-all-files
          DIFF=$(git diff *.yml */*.yml)
          popd

          if [ -n "$DIFF" ]; then
            NVR=$(echo -e "$DIFF"|grep -P '^\+(?:(?!\+\+))'|grep -e "$RELEASE-testing"|cut -d: -f2|rev|cut -d. -f2-|rev)
            change_list_filtered=""
            branch=c9s-$RELEASE-rdo
            pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/gating_scripts'].src_dir }}
            source ${GATING_SCRIPTS_BASE}/rpm-deps-gating-lib.common
            for pkg in $NVR; do
              needs_update=true
              change_url=""
              pkg_name=$(echo $pkg | sed 's/^\(.*\)-\([^-]\{1,\}\)-\([^-]\{1,\}\)$/\1/')
              pkg_vers=$(echo $pkg | sed 's/^\(.*\)-\([^-]\{1,\}\)-\([^-]\{1,\}\)$/\2/')
              pkg_nv=$pkg_name-$pkg_vers

              in_koji_nvr=$(python3 exist_in_koji.py $pkg_name $pkg_vers koji exact)
              if [ -z "$in_koji_nvr" ]; then
                echo -e "INFO: there is no build found in Fedora Koji for package and version $pkg_nv"
                continue
              fi

              # We check if the NVR is available in CBS, otherwise we send
              # a patch (if not yet opened).
              in_cbs_nvr=$(python3 exist_in_koji.py $pkg_name $pkg_vers cbs exact)
              if [ -n "$in_cbs_nvr" ]; then
                echo -e "INFO: there is a build found in CBS Koji: $in_cbs_nvr"
                change_list_filtered="$change_list_filtered $pkg_name===$pkg_vers"
              else
                is_patch_already $pkg_name $pkg_vers $branch
                if [ $? -eq 0 ]; then
                  echo -e "INFO: there is already an opened patch for ${pkg_name} matching the required ${pkg_vers}"
                else
                  echo -e "INFO: there is not an opened patch for ${pkg_name} matching the required ${pkg_vers}"
                  echo -e "INFO: creating patch for ${pkg_nv}..."
                  distgit_status=$(setup_distgit $pkg_name $in_koji_nvr $RELEASE 9s)
                  if [ $? -eq 0 ]; then
                    pushd workdir/$pkg_name
                    git add .
                    COMMIT_MSG="Update to ${pkg_vers}"
                    git commit -m "$COMMIT_MSG"
                    echo -e "INFO: submitting patch for ${pkg_nv}..."
                    git review c9s-${RELEASE}-rdo -t cs9-deps-uc-update
                    popd
                  else
                    echo -e "ERROR: while setting up distgit for $pkg_name"
                    echo -e "$distgit_status"
                  fi
                fi
              fi
            done


            if [ -n "$change_list_filtered" ]; then
              pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdoinfo'].src_dir }}
              git stash
              echo -e "INFO: bumping the selected packages in rdoinfo: $change_list_filtered"
              python ${GATING_SCRIPTS_BASE}/buildsys-tags/add-buildsys-tags.py \
                  -l $change_list_filtered \
                  -r $RELEASE \
                  --centos-release 9s \
                  -p testing \
                  --no-update-all-files
              COMMIT_MSG="CBS tags sync with uc for $RELEASE-testing"
              git checkout -b proposal
              git review -s -v
              echo -e $COMMIT_MSG | git commit -F- *.yml */*.yml
              echo -e "INFO: submitting rdoinfo patch..."
              git review -t "cs9-deps-uc-update" < /dev/null
              popd
            else
              echo "INFO: there is nothing to commit in rdoinfo repo, exiting"
              exit 0
            fi
          else
            echo "INFO: There is no deps to update, exiting"
            exit 0
          fi
      changed_when: true
