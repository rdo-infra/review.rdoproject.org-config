- hosts: all
  name: rdo-deps-uc-send-review playbook
  tasks:
    - name: rdo-deps-uc-send-review
      shell:
        cmd: |
          set +e -x
          source {{ ansible_user_dir }}/functions.sh
          virtualenv --system-site-packages .venv
          . .venv/bin/activate
          pip install pymod2pkg sh git-review ruamel.yaml rdopkg koji rpm_vercmp
          # Install releng, needed for add-buildsys-tags.py script
          pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/releng'].src_dir }}
          pip install .
          popd

          BRANCH="{{ zuul.branch }}"
          if [ "$BRANCH" == 'master' ]; then
              RELEASE="zed"
          else
              echo "INFO: we handle master branch only"
              exit 0
          fi

          pushd {{ ansible_user_dir }}/{{ zuul.project.src_dir }}
          SUBJECT=$(git log --oneline {{ zuul.newrev }}|head -1|cut -d " " -f 2)
          if [ $SUBJECT == "Merge" ]; then
             REAL_COMMIT=$(git show {{ zuul.newrev }}|grep ^Merge:|awk '{print $(NF)}')
          else
             REAL_COMMIT={{ zuul.newrev }}
          fi
          UPSTREAM_CHANGE_ID=$(git show $REAL_COMMIT|grep Change-Id:|awk '{print $(NF)}')
          change_list=($(git show $REAL_COMMIT upper-constraints.txt|grep -P '^\+(?:(?!\+\+))|^-(?:(?!--))'))
          change_list=${change_list[@]/#[+-]/}
          popd

          if [ -z "${change_list//[[:space:]]/}" ]; then
              echo "INFO: No update in upper-constraints, Exiting"
              exit 0
          fi

          GATING_SCRIPTS_BASE="{{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/gating_scripts'].src_dir }}"
          pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdoinfo'].src_dir }}
          python ${GATING_SCRIPTS_BASE}/buildsys-tags/add-buildsys-tags.py \
              -l $change_list \
              -r $RELEASE \
              --centos-release 9s \
              -p testing
          DIFF=$(git diff *.yml */*.yml)
          popd

          mkdir -p ~/.ssh
          cat >> ~/.ssh/config << EOF

          Host review.rdoproject.org
            IdentityFile ~/.ssh/rdoinfo_id_rsa
          EOF

          chmod 600 ~/.ssh/config
          ssh-keyscan -p 29418 review.rdoproject.org >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          git config --global --add user.name "rdo-trunk"
          git config --global --add user.email "amoralej+rdo-trunk@redhat.com"
          git config --global --add gitreview.username "rdo-trunk"

          if [ -n "$DIFF" ]; then
            NVR=$(echo -e "$DIFF"|grep -P '^\+(?:(?!\+\+))'|grep -e "$RELEASE-testing"|cut -d: -f2|rev|cut -d. -f2-|rev)
            branch=c9s-$RELEASE-rdo
            pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/gating_scripts'].src_dir }}
            source ${GATING_SCRIPTS_BASE}/rpm-deps-gating-lib.common
            for pkg in $NVR; do
              needs_update=true
              change_url=""
              pkg_name=$(echo $pkg | sed 's/^\(.*\)-\([^-]\{1,\}\)-\([^-]\{1,\}\)$/\1/')
              pkg_vers=$(echo $pkg | sed 's/^\(.*\)-\([^-]\{1,\}\)-\([^-]\{1,\}\)$/\2/')
              pkg_nv=$pkg_name-$pkg_vers
              in_koji_nvr=$(python3 exist_in_koji.py $pkg_name $pkg_vers koji exact)
              if [ -z "$in_koji_nvr" ]; then
                echo -e "INFO: there is no build found in Fedora Koji for package and version $pkg_nv"
                continue
              fi

              is_patch_already $pkg_name $pkg_vers $branch
              if [ $? -ne 0 ]; then
                distgit_status=$(setup_distgit $pkg_name $in_koji_nvr $RELEASE 9s)
                if [ $? -eq 0 ]; then
                  pushd workdir/$pkg_name
                  git add .
                  COMMIT_MSG="Update to ${pkg_vers}"
                  git commit -m "$COMMIT_MSG"
                  review_status="$(git review c9s-${RELEASE}-rdo -t cs9-deps-uc-update)"
                  if [ $? -eq 0 ]; then
                    change_url=$(echo -e "$review_status" | grep -e "$COMMIT_MSG" | awk '{print $2}')
                    if [ -n $change_url ]; then
                      DEPENDS_ON+="Depends-On: $change_url\n"
                    fi
                  fi
                  popd
                else
                  echo -e "ERROR: while setting up distgit for $pkg_name"
                  echo -e "$distgit_status"
                fi
              fi
            done


            if [ -n "$DEPENDS_ON" ]; then
              pushd {{ ansible_user_dir }}/{{ zuul.projects['review.rdoproject.org/rdoinfo'].src_dir }}
              COMMIT_MSG="CBS tags sync with uc for $RELEASE-testing\n\nUpstream-Id: $UPSTREAM_CHANGE_ID\n$DEPENDS_ON"
              git checkout -b proposal
              git review -s -v
              echo -e $COMMIT_MSG | git commit -F- *.yml */*.yml
              git review -t "cs9-deps-uc-update" < /dev/null
              popd
            else
              echo "INFO: there is nothing to commit, Exiting"
              exit 0
            fi
          else
            echo "INFO: There is no deps to update, Exiting"
            exit 0
          fi
      changed_when: true
