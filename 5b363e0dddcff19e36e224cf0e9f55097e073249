{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b454213d_df0fab48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 547
      },
      "writtenOn": "2023-08-02T08:11:31Z",
      "side": 1,
      "message": "Wondering if we shouldn\u0027t push all of the openstack generated IDs in a file for later reference, when removal time comes...",
      "revId": "5b363e0dddcff19e36e224cf0e9f55097e073249",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fe08608_5e03fdb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 879
      },
      "writtenOn": "2023-08-02T08:24:45Z",
      "side": 1,
      "message": "Seems good, is something I thought, but I wasn\u0027t so sure to make the cleanup dependent on something that anyone can remove:(. But that can simplify the cleanup a tone. Is more or less the thing I did here: https://github.com/openstack-k8s-operators/ci-framework/pull/354/files#diff-acec5cbcd725a500446e8784136d678b900634027a1e173976ff80ac9e0bc588R67",
      "parentUuid": "b454213d_df0fab48",
      "revId": "5b363e0dddcff19e36e224cf0e9f55097e073249",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46c6d449_2a560ff2",
        "filename": "playbooks/crc/bootstrap-ci-network-instance-add-vlan.yml",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 547
      },
      "writtenOn": "2023-08-02T08:11:31Z",
      "side": 1,
      "message": "there\u0027s an ignore_case flag apparently:\nhttps://docs.ansible.com/ansible/latest/collections/ansible/builtin/regex_replace_filter.html\n\nI\u0027m also afraid it doesn\u0027t replace \"globally\", when reading this:\n\"\"\"\nReplace a substring defined by a regular expression with another defined by another regular expression based on the first match\n\"\"\"\nfirst match only? maybe we should leverage some \"g\" flag somewhere? Something to keep in mind for some future follow-up?",
      "revId": "5b363e0dddcff19e36e224cf0e9f55097e073249",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "555c03e8_6c422e10",
        "filename": "playbooks/crc/bootstrap-ci-network-instance-add-vlan.yml",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 879
      },
      "writtenOn": "2023-08-02T08:24:45Z",
      "side": 1,
      "message": "another option, maybe cleaner, and shorter, is just to append the vlan id, instead for the \"artificial\" network name",
      "parentUuid": "46c6d449_2a560ff2",
      "revId": "5b363e0dddcff19e36e224cf0e9f55097e073249",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "857aedce_79c25ab6",
        "filename": "playbooks/crc/bootstrap-ci-network-instance.yml",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 547
      },
      "writtenOn": "2023-08-02T08:11:31Z",
      "side": 1,
      "message": "can\u0027t we have a \"retries\" until system displays the interface in nmcli output or something?",
      "revId": "5b363e0dddcff19e36e224cf0e9f55097e073249",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d9d2360_c2ea272d",
        "filename": "playbooks/crc/bootstrap-ci-network-instance.yml",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 879
      },
      "writtenOn": "2023-08-02T08:24:45Z",
      "side": 1,
      "message": "I like that, I\u0027ll go that way",
      "parentUuid": "857aedce_79c25ab6",
      "revId": "5b363e0dddcff19e36e224cf0e9f55097e073249",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7"
    }
  ]
}